Grammar:

Rule 0     S' -> fullexpressionset
Rule 1     simpletype -> name kind  [precedence=left, level=17]
Rule 2     containeraccess -> name container  [precedence=left, level=18]
Rule 3     standardinvokation -> name parameter  [precedence=left, level=19]
Rule 4     invokationwithexecution -> name execution  [precedence=left, level=20]
Rule 5     structtype -> name kind parameter  [precedence=left, level=21]
Rule 6     structtype -> simpletype parameter  [precedence=left, level=21]
Rule 7     executivetype -> simpletype execution  [precedence=left, level=22]
Rule 8     executivetype -> name kind execution  [precedence=left, level=22]
Rule 9     invokationwithparametersandexecution -> name parameter execution  [precedence=left, level=23]
Rule 10    invokationwithparametersandexecution -> standardinvokation execution  [precedence=left, level=23]
Rule 11    containerinvokation -> containeraccess execution  [precedence=left, level=24]
Rule 12    containerinvokation -> name container execution  [precedence=left, level=24]
Rule 13    containerinvokationwithparameters -> standardinvokation container execution  [precedence=left, level=25]
Rule 14    containerinvokationwithparameters -> name parameter container execution  [precedence=left, level=25]
Rule 15    fullexpressionset -> fullexpressionset completefullexpression  [precedence=left, level=7]
Rule 16    fullexpressionset -> completefullexpression  [precedence=left, level=7]
Rule 17    fullexpression -> containerinvokationwithparameters  [precedence=left, level=8]
Rule 18    fullexpression -> invokationwithparametersandexecution  [precedence=left, level=8]
Rule 19    fullexpression -> standardinvokation  [precedence=left, level=8]
Rule 20    fullexpression -> simpletype  [precedence=left, level=8]
Rule 21    fullexpression -> executivetype  [precedence=left, level=8]
Rule 22    fullexpression -> structtype  [precedence=left, level=8]
Rule 23    fullexpression -> functortype  [precedence=left, level=8]
Rule 24    fullexpression -> kind  [precedence=left, level=8]
Rule 25    fullexpression -> limitedexpressionset  [precedence=left, level=8]
Rule 26    fullexpression -> limitedexpression  [precedence=left, level=8]
Rule 27    functortype -> structtype execution  [precedence=left, level=26]
Rule 28    functortype -> name kind parameter execution  [precedence=left, level=26]
Rule 29    execution -> open_execution fullexpression close_execution  [precedence=left, level=9]
Rule 30    execution -> open_execution close_execution  [precedence=left, level=9]
Rule 31    execution -> open_execution fullexpressionset close_execution  [precedence=left, level=9]
Rule 32    open_execution -> OPEN_EXECUTION  [precedence=left, level=2]
Rule 33    close_execution -> CLOSE_EXECUTION  [precedence=left, level=2]
Rule 34    parameter -> open_parameter fullexpression close_parameter  [precedence=left, level=10]
Rule 35    parameter -> open_parameter close_parameter  [precedence=left, level=10]
Rule 36    parameter -> open_parameter fullexpressionset close_parameter  [precedence=left, level=10]
Rule 37    open_parameter -> OPEN_PARAMETER  [precedence=left, level=2]
Rule 38    close_parameter -> CLOSE_PARAMETER  [precedence=left, level=2]
Rule 39    container -> open_container fullexpression close_container  [precedence=left, level=11]
Rule 40    container -> open_container close_container  [precedence=left, level=11]
Rule 41    container -> open_container fullexpressionset close_container  [precedence=left, level=11]
Rule 42    open_container -> OPEN_CONTAINER  [precedence=left, level=2]
Rule 43    close_container -> CLOSE_CONTAINER  [precedence=left, level=2]
Rule 44    kind -> open_kind open_kind  [precedence=left, level=12]
Rule 45    kind -> open_kind limitedexpression open_kind  [precedence=left, level=12]
Rule 46    kind -> open_kind limitedexpression close_expression  [precedence=left, level=12]
Rule 47    kind -> open_kind limitedexpression  [precedence=left, level=12]
Rule 48    open_kind -> OPEN_KIND  [precedence=left, level=2]
Rule 49    unformattedstring -> UNFORMATTEDSTRING  [precedence=left, level=3]
Rule 50    formattedstring -> FORMATTEDSTRING  [precedence=left, level=4]
Rule 51    string -> formattedstring  [precedence=left, level=5]
Rule 52    string -> unformattedstring  [precedence=left, level=5]
Rule 53    completefullexpression -> close_expression  [precedence=left, level=8]
Rule 54    completefullexpression -> fullexpression close_expression  [precedence=left, level=8]
Rule 55    completelimitedexpression -> limitedexpression close_expression  [precedence=left, level=14]
Rule 56    completeprotoexpression -> protoexpression close_expression  [precedence=left, level=16]
Rule 57    close_expression -> close_expression EOL  [precedence=left, level=6]
Rule 58    close_expression -> close_expression CLOSE_EXPRESSION  [precedence=left, level=6]
Rule 59    close_expression -> CLOSE_EXPRESSION  [precedence=left, level=6]
Rule 60    close_expression -> EOL  [precedence=left, level=6]
Rule 61    explicitaccess -> explicitaccess EXPLICITACCESS name  [precedence=left, level=1]
Rule 62    explicitaccess -> name EXPLICITACCESS name  [precedence=left, level=1]
Rule 63    limitedexpressionset -> limitedexpressionset completelimitedexpression  [precedence=left, level=13]
Rule 64    limitedexpressionset -> completelimitedexpression  [precedence=left, level=13]
Rule 65    limitedexpression -> containerinvokation  [precedence=left, level=14]
Rule 66    limitedexpression -> containeraccess  [precedence=left, level=14]
Rule 67    limitedexpression -> invokationwithexecution  [precedence=left, level=14]
Rule 68    limitedexpression -> protoexpressionset  [precedence=left, level=14]
Rule 69    limitedexpression -> protoexpression  [precedence=left, level=14]
Rule 70    protoexpressionset -> protoexpressionset completeprotoexpression  [precedence=left, level=15]
Rule 71    protoexpressionset -> completeprotoexpression  [precedence=left, level=15]
Rule 72    protoexpression -> globalscope  [precedence=left, level=16]
Rule 73    protoexpression -> upperscopeoption2  [precedence=left, level=16]
Rule 74    protoexpression -> upperscopeoption1  [precedence=left, level=16]
Rule 75    protoexpression -> explicitaccess  [precedence=left, level=16]
Rule 76    protoexpression -> sequence  [precedence=left, level=16]
Rule 77    protoexpression -> autofillinvokation  [precedence=left, level=16]
Rule 78    protoexpression -> autofillaccessorinvokation  [precedence=left, level=16]
Rule 79    protoexpression -> string  [precedence=left, level=16]
Rule 80    protoexpression -> number  [precedence=left, level=16]
Rule 81    protoexpression -> name  [precedence=left, level=16]
Rule 82    sequence -> sequence SEQUENCE name  [precedence=left, level=1]
Rule 83    sequence -> name SEQUENCE name  [precedence=left, level=1]
Rule 84    autofillaccessorinvokation -> number autofillaccessorinvokation  [precedence=left, level=1]
Rule 85    autofillaccessorinvokation -> autofillaccessorinvokation name  [precedence=left, level=1]
Rule 86    autofillaccessorinvokation -> sequence autofillaccessorinvokation  [precedence=left, level=1]
Rule 87    autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation  [precedence=left, level=1]
Rule 88    autofillaccessorinvokation -> containeraccess autofillaccessorinvokation  [precedence=left, level=1]
Rule 89    autofillaccessorinvokation -> simpletype autofillaccessorinvokation  [precedence=left, level=1]
Rule 90    autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation  [precedence=left, level=1]
Rule 91    autofillaccessorinvokation -> autofillaccessorinvokation containeraccess  [precedence=left, level=1]
Rule 92    autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation  [precedence=left, level=1]
Rule 93    autofillaccessorinvokation -> autofillaccessorinvokation sequence  [precedence=left, level=1]
Rule 94    autofillaccessorinvokation -> autofillaccessorinvokation number  [precedence=left, level=1]
Rule 95    autofillaccessorinvokation -> number name  [precedence=left, level=1]
Rule 96    autofillaccessorinvokation -> name name  [precedence=left, level=1]
Rule 97    autofillaccessorinvokation -> sequence name  [precedence=left, level=1]
Rule 98    autofillaccessorinvokation -> standardinvokation name  [precedence=left, level=1]
Rule 99    autofillaccessorinvokation -> containeraccess name  [precedence=left, level=1]
Rule 100   autofillaccessorinvokation -> simpletype name  [precedence=left, level=1]
Rule 101   autofillaccessorinvokation -> name standardinvokation  [precedence=left, level=1]
Rule 102   autofillaccessorinvokation -> name containeraccess  [precedence=left, level=1]
Rule 103   autofillaccessorinvokation -> name autofillinvokation  [precedence=left, level=1]
Rule 104   autofillaccessorinvokation -> name sequence  [precedence=left, level=1]
Rule 105   autofillaccessorinvokation -> standardinvokation containeraccess  [precedence=left, level=1]
Rule 106   autofillaccessorinvokation -> standardinvokation sequence  [precedence=left, level=1]
Rule 107   autofillaccessorinvokation -> standardinvokation autofillinvokation  [precedence=left, level=1]
Rule 108   autofillaccessorinvokation -> containeraccess sequence  [precedence=left, level=1]
Rule 109   autofillaccessorinvokation -> containeraccess standardinvokation  [precedence=left, level=1]
Rule 110   autofillaccessorinvokation -> containeraccess autofillinvokation  [precedence=left, level=1]
Rule 111   autofillaccessorinvokation -> simpletype sequence  [precedence=left, level=1]
Rule 112   autofillaccessorinvokation -> simpletype standardinvokation  [precedence=left, level=1]
Rule 113   autofillaccessorinvokation -> simpletype containeraccess  [precedence=left, level=1]
Rule 114   autofillaccessorinvokation -> simpletype autofillinvokation  [precedence=left, level=1]
Rule 115   autofillinvokation -> shorttype standardinvokation  [precedence=left, level=1]
Rule 116   autofillinvokation -> shorttype containeraccess  [precedence=left, level=1]
Rule 117   autofillinvokation -> shorttype container  [precedence=left, level=1]
Rule 118   autofillinvokation -> shorttype sequence  [precedence=left, level=1]
Rule 119   autofillinvokation -> shorttype number  [precedence=left, level=1]
Rule 120   autofillinvokation -> shorttype string  [precedence=left, level=1]
Rule 121   autofillinvokation -> name number  [precedence=left, level=1]
Rule 122   autofillinvokation -> name string  [precedence=left, level=1]
Rule 123   shorttype -> name SHORTTYPE  [precedence=left, level=1]
Rule 124   upperscopeoption1 -> UPPERSCOPEOPTION1 name  [precedence=left, level=1]
Rule 125   upperscopeoption2 -> UPPERSCOPEOPTION2 name  [precedence=left, level=1]
Rule 126   globalscope -> SEQUENCE NAME  [precedence=left, level=1]
Rule 127   name -> NAME  [precedence=left, level=27]
Rule 128   number -> number EXPLICITACCESS NUMBER  [precedence=left, level=28]
Rule 129   number -> NUMBER EXPLICITACCESS NUMBER  [precedence=left, level=28]
Rule 130   number -> NUMBER  [precedence=left, level=28]

Terminals, with rules where they appear:

CLOSE_CONTAINER      : 43
CLOSE_EXECUTION      : 33
CLOSE_EXPRESSION     : 58 59
CLOSE_PARAMETER      : 38
EOL                  : 57 60
EXPLICITACCESS       : 61 62 128 129
FORMATTEDSTRING      : 50
NAME                 : 126 127
NUMBER               : 128 129 129 130
OPEN_CONTAINER       : 42
OPEN_EXECUTION       : 32
OPEN_KIND            : 48
OPEN_PARAMETER       : 37
SEQUENCE             : 82 83 126
SHORTTYPE            : 123
UNFORMATTEDSTRING    : 49
UPPERSCOPEOPTION1    : 124
UPPERSCOPEOPTION2    : 125
error                : 

Nonterminals, with rules where they appear:

autofillaccessorinvokation : 78 84 85 86 87 88 89 90 91 92 93 94
autofillinvokation   : 77 92 103 107 110 114
close_container      : 39 40 41
close_execution      : 29 30 31
close_expression     : 46 53 54 55 56 57 58
close_parameter      : 34 35 36
completefullexpression : 15 16
completelimitedexpression : 63 64
completeprotoexpression : 70 71
container            : 2 12 13 14 117
containeraccess      : 11 66 88 91 99 102 105 108 109 110 113 116
containerinvokation  : 65
containerinvokationwithparameters : 17
execution            : 4 7 8 9 10 11 12 13 14 27 28
executivetype        : 21
explicitaccess       : 61 75
formattedstring      : 51
fullexpression       : 29 34 39 54
fullexpressionset    : 15 31 36 41 0
functortype          : 23
globalscope          : 72
invokationwithexecution : 67
invokationwithparametersandexecution : 18
kind                 : 1 5 8 24 28
limitedexpression    : 26 45 46 47 55
limitedexpressionset : 25 63
name                 : 1 2 3 4 5 8 9 12 14 28 61 62 62 81 82 83 83 85 95 96 96 97 98 99 100 101 102 103 104 121 122 123 124 125
number               : 80 84 94 95 119 121 128
open_container       : 39 40 41
open_execution       : 29 30 31
open_kind            : 44 44 45 45 46 47
open_parameter       : 34 35 36
parameter            : 3 5 6 9 14 28
protoexpression      : 56 69
protoexpressionset   : 68 70
sequence             : 76 82 86 93 97 104 106 108 111 118
shorttype            : 115 116 117 118 119 120
simpletype           : 6 7 20 89 100 111 112 113 114
standardinvokation   : 10 13 19 87 90 98 101 105 106 107 109 112 115
string               : 79 120 122
structtype           : 22 27
unformattedstring    : 52
upperscopeoption1    : 74
upperscopeoption2    : 73


state 0

	(0) S' -> . fullexpressionset
	(15) fullexpressionset -> . fullexpressionset completefullexpression
	(16) fullexpressionset -> . completefullexpression
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	fullexpressionset              shift and go to state 1
	completefullexpression         shift and go to state 2
	close_expression               shift and go to state 3
	fullexpression                 shift and go to state 4
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 1

	(0) S' -> fullexpressionset .
	(15) fullexpressionset -> fullexpressionset . completefullexpression
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	completefullexpression         shift and go to state 46
	close_expression               shift and go to state 3
	fullexpression                 shift and go to state 4
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 2

	(16) fullexpressionset -> completefullexpression .
	CLOSE_EXPRESSION reduce using rule 16 (fullexpressionset -> completefullexpression .)
	EOL             reduce using rule 16 (fullexpressionset -> completefullexpression .)
	NAME            reduce using rule 16 (fullexpressionset -> completefullexpression .)
	OPEN_KIND       reduce using rule 16 (fullexpressionset -> completefullexpression .)
	SEQUENCE        reduce using rule 16 (fullexpressionset -> completefullexpression .)
	UPPERSCOPEOPTION2 reduce using rule 16 (fullexpressionset -> completefullexpression .)
	UPPERSCOPEOPTION1 reduce using rule 16 (fullexpressionset -> completefullexpression .)
	NUMBER          reduce using rule 16 (fullexpressionset -> completefullexpression .)
	FORMATTEDSTRING reduce using rule 16 (fullexpressionset -> completefullexpression .)
	UNFORMATTEDSTRING reduce using rule 16 (fullexpressionset -> completefullexpression .)
	$end            reduce using rule 16 (fullexpressionset -> completefullexpression .)
	CLOSE_CONTAINER reduce using rule 16 (fullexpressionset -> completefullexpression .)
	CLOSE_EXECUTION reduce using rule 16 (fullexpressionset -> completefullexpression .)
	CLOSE_PARAMETER reduce using rule 16 (fullexpressionset -> completefullexpression .)


state 3

	(53) completefullexpression -> close_expression .
	(57) close_expression -> close_expression . EOL
	(58) close_expression -> close_expression . CLOSE_EXPRESSION
	CLOSE_EXPRESSION reduce using rule 53 (completefullexpression -> close_expression .)
	EOL             reduce using rule 53 (completefullexpression -> close_expression .)
	NAME            reduce using rule 53 (completefullexpression -> close_expression .)
	OPEN_KIND       reduce using rule 53 (completefullexpression -> close_expression .)
	SEQUENCE        reduce using rule 53 (completefullexpression -> close_expression .)
	UPPERSCOPEOPTION2 reduce using rule 53 (completefullexpression -> close_expression .)
	UPPERSCOPEOPTION1 reduce using rule 53 (completefullexpression -> close_expression .)
	NUMBER          reduce using rule 53 (completefullexpression -> close_expression .)
	FORMATTEDSTRING reduce using rule 53 (completefullexpression -> close_expression .)
	UNFORMATTEDSTRING reduce using rule 53 (completefullexpression -> close_expression .)
	$end            reduce using rule 53 (completefullexpression -> close_expression .)
	CLOSE_CONTAINER reduce using rule 53 (completefullexpression -> close_expression .)
	CLOSE_EXECUTION reduce using rule 53 (completefullexpression -> close_expression .)
	CLOSE_PARAMETER reduce using rule 53 (completefullexpression -> close_expression .)


state 4

	(54) completefullexpression -> fullexpression . close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_expression               shift and go to state 49

state 5

	(60) close_expression -> EOL .
	EOL             reduce using rule 60 (close_expression -> EOL .)
	CLOSE_EXPRESSION reduce using rule 60 (close_expression -> EOL .)
	NAME            reduce using rule 60 (close_expression -> EOL .)
	OPEN_KIND       reduce using rule 60 (close_expression -> EOL .)
	SEQUENCE        reduce using rule 60 (close_expression -> EOL .)
	UPPERSCOPEOPTION2 reduce using rule 60 (close_expression -> EOL .)
	UPPERSCOPEOPTION1 reduce using rule 60 (close_expression -> EOL .)
	NUMBER          reduce using rule 60 (close_expression -> EOL .)
	FORMATTEDSTRING reduce using rule 60 (close_expression -> EOL .)
	UNFORMATTEDSTRING reduce using rule 60 (close_expression -> EOL .)
	$end            reduce using rule 60 (close_expression -> EOL .)
	CLOSE_CONTAINER reduce using rule 60 (close_expression -> EOL .)
	CLOSE_EXECUTION reduce using rule 60 (close_expression -> EOL .)
	CLOSE_PARAMETER reduce using rule 60 (close_expression -> EOL .)
	OPEN_EXECUTION  reduce using rule 60 (close_expression -> EOL .)
	OPEN_PARAMETER  reduce using rule 60 (close_expression -> EOL .)


state 6

	(59) close_expression -> CLOSE_EXPRESSION .
	EOL             reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	CLOSE_EXPRESSION reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	NAME            reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	OPEN_KIND       reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	SEQUENCE        reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	UPPERSCOPEOPTION2 reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	UPPERSCOPEOPTION1 reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	NUMBER          reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	FORMATTEDSTRING reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	UNFORMATTEDSTRING reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	$end            reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	CLOSE_CONTAINER reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	CLOSE_EXECUTION reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	CLOSE_PARAMETER reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	OPEN_EXECUTION  reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)
	OPEN_PARAMETER  reduce using rule 59 (close_expression -> CLOSE_EXPRESSION .)


state 7

	(17) fullexpression -> containerinvokationwithparameters .
	CLOSE_EXPRESSION reduce using rule 17 (fullexpression -> containerinvokationwithparameters .)
	EOL             reduce using rule 17 (fullexpression -> containerinvokationwithparameters .)
	CLOSE_CONTAINER reduce using rule 17 (fullexpression -> containerinvokationwithparameters .)
	CLOSE_EXECUTION reduce using rule 17 (fullexpression -> containerinvokationwithparameters .)
	CLOSE_PARAMETER reduce using rule 17 (fullexpression -> containerinvokationwithparameters .)


state 8

	(18) fullexpression -> invokationwithparametersandexecution .
	CLOSE_EXPRESSION reduce using rule 18 (fullexpression -> invokationwithparametersandexecution .)
	EOL             reduce using rule 18 (fullexpression -> invokationwithparametersandexecution .)
	CLOSE_CONTAINER reduce using rule 18 (fullexpression -> invokationwithparametersandexecution .)
	CLOSE_EXECUTION reduce using rule 18 (fullexpression -> invokationwithparametersandexecution .)
	CLOSE_PARAMETER reduce using rule 18 (fullexpression -> invokationwithparametersandexecution .)


state 9

	(19) fullexpression -> standardinvokation .
	(13) containerinvokationwithparameters -> standardinvokation . container execution
	(10) invokationwithparametersandexecution -> standardinvokation . execution
	(87) autofillaccessorinvokation -> standardinvokation . autofillaccessorinvokation
	(98) autofillaccessorinvokation -> standardinvokation . name
	(105) autofillaccessorinvokation -> standardinvokation . containeraccess
	(106) autofillaccessorinvokation -> standardinvokation . sequence
	(107) autofillaccessorinvokation -> standardinvokation . autofillinvokation
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(2) containeraccess -> . name container
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(42) open_container -> . OPEN_CONTAINER
	(32) open_execution -> . OPEN_EXECUTION
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 19 (fullexpression -> standardinvokation .)
	EOL             reduce using rule 19 (fullexpression -> standardinvokation .)
	CLOSE_CONTAINER reduce using rule 19 (fullexpression -> standardinvokation .)
	CLOSE_EXECUTION reduce using rule 19 (fullexpression -> standardinvokation .)
	CLOSE_PARAMETER reduce using rule 19 (fullexpression -> standardinvokation .)
	NAME            shift and go to state 25
	OPEN_CONTAINER  shift and go to state 62
	OPEN_EXECUTION  shift and go to state 63
	NUMBER          shift and go to state 43

	standardinvokation             shift and go to state 50
	container                      shift and go to state 51
	execution                      shift and go to state 52
	autofillaccessorinvokation     shift and go to state 53
	name                           shift and go to state 54
	containeraccess                shift and go to state 55
	sequence                       shift and go to state 56
	autofillinvokation             shift and go to state 57
	open_container                 shift and go to state 58
	open_execution                 shift and go to state 59
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 10

	(20) fullexpression -> simpletype .
	(7) executivetype -> simpletype . execution
	(6) structtype -> simpletype . parameter
	(89) autofillaccessorinvokation -> simpletype . autofillaccessorinvokation
	(100) autofillaccessorinvokation -> simpletype . name
	(111) autofillaccessorinvokation -> simpletype . sequence
	(112) autofillaccessorinvokation -> simpletype . standardinvokation
	(113) autofillaccessorinvokation -> simpletype . containeraccess
	(114) autofillaccessorinvokation -> simpletype . autofillinvokation
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(32) open_execution -> . OPEN_EXECUTION
	(37) open_parameter -> . OPEN_PARAMETER
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 20 (fullexpression -> simpletype .)
	EOL             reduce using rule 20 (fullexpression -> simpletype .)
	CLOSE_CONTAINER reduce using rule 20 (fullexpression -> simpletype .)
	CLOSE_EXECUTION reduce using rule 20 (fullexpression -> simpletype .)
	CLOSE_PARAMETER reduce using rule 20 (fullexpression -> simpletype .)
	NAME            shift and go to state 25
	OPEN_EXECUTION  shift and go to state 63
	OPEN_PARAMETER  shift and go to state 73
	NUMBER          shift and go to state 43

	simpletype                     shift and go to state 61
	execution                      shift and go to state 64
	parameter                      shift and go to state 65
	autofillaccessorinvokation     shift and go to state 66
	name                           shift and go to state 67
	sequence                       shift and go to state 68
	standardinvokation             shift and go to state 69
	containeraccess                shift and go to state 70
	autofillinvokation             shift and go to state 71
	open_execution                 shift and go to state 59
	open_parameter                 shift and go to state 72
	number                         shift and go to state 60
	shorttype                      shift and go to state 40

state 11

	(21) fullexpression -> executivetype .
	CLOSE_EXPRESSION reduce using rule 21 (fullexpression -> executivetype .)
	EOL             reduce using rule 21 (fullexpression -> executivetype .)
	CLOSE_CONTAINER reduce using rule 21 (fullexpression -> executivetype .)
	CLOSE_EXECUTION reduce using rule 21 (fullexpression -> executivetype .)
	CLOSE_PARAMETER reduce using rule 21 (fullexpression -> executivetype .)


state 12

	(22) fullexpression -> structtype .
	(27) functortype -> structtype . execution
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(32) open_execution -> . OPEN_EXECUTION
	CLOSE_EXPRESSION reduce using rule 22 (fullexpression -> structtype .)
	EOL             reduce using rule 22 (fullexpression -> structtype .)
	CLOSE_CONTAINER reduce using rule 22 (fullexpression -> structtype .)
	CLOSE_EXECUTION reduce using rule 22 (fullexpression -> structtype .)
	CLOSE_PARAMETER reduce using rule 22 (fullexpression -> structtype .)
	OPEN_EXECUTION  shift and go to state 63

	execution                      shift and go to state 74
	open_execution                 shift and go to state 59

state 13

	(23) fullexpression -> functortype .
	CLOSE_EXPRESSION reduce using rule 23 (fullexpression -> functortype .)
	EOL             reduce using rule 23 (fullexpression -> functortype .)
	CLOSE_CONTAINER reduce using rule 23 (fullexpression -> functortype .)
	CLOSE_EXECUTION reduce using rule 23 (fullexpression -> functortype .)
	CLOSE_PARAMETER reduce using rule 23 (fullexpression -> functortype .)


state 14

	(24) fullexpression -> kind .
	CLOSE_EXPRESSION reduce using rule 24 (fullexpression -> kind .)
	EOL             reduce using rule 24 (fullexpression -> kind .)
	CLOSE_CONTAINER reduce using rule 24 (fullexpression -> kind .)
	CLOSE_EXECUTION reduce using rule 24 (fullexpression -> kind .)
	CLOSE_PARAMETER reduce using rule 24 (fullexpression -> kind .)


state 15

	(25) fullexpression -> limitedexpressionset .
	(63) limitedexpressionset -> limitedexpressionset . completelimitedexpression
	(55) completelimitedexpression -> . limitedexpression close_expression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(127) name -> . NAME
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXPRESSION reduce using rule 25 (fullexpression -> limitedexpressionset .)
	EOL             reduce using rule 25 (fullexpression -> limitedexpressionset .)
	CLOSE_CONTAINER reduce using rule 25 (fullexpression -> limitedexpressionset .)
	CLOSE_EXECUTION reduce using rule 25 (fullexpression -> limitedexpressionset .)
	CLOSE_PARAMETER reduce using rule 25 (fullexpression -> limitedexpressionset .)
	NAME            shift and go to state 25
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	completelimitedexpression      shift and go to state 75
	limitedexpression              shift and go to state 76
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	name                           shift and go to state 77
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	standardinvokation             shift and go to state 50
	simpletype                     shift and go to state 61
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 16

	(26) fullexpression -> limitedexpression .
	(55) completelimitedexpression -> limitedexpression . close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION reduce using rule 26 (fullexpression -> limitedexpression .)
	EOL             reduce using rule 26 (fullexpression -> limitedexpression .)
	CLOSE_CONTAINER reduce using rule 26 (fullexpression -> limitedexpression .)
	CLOSE_EXECUTION reduce using rule 26 (fullexpression -> limitedexpression .)
	CLOSE_PARAMETER reduce using rule 26 (fullexpression -> limitedexpression .)

	close_expression               shift and go to state 78

state 17

	(14) containerinvokationwithparameters -> name . parameter container execution
	(9) invokationwithparametersandexecution -> name . parameter execution
	(3) standardinvokation -> name . parameter
	(1) simpletype -> name . kind
	(8) executivetype -> name . kind execution
	(5) structtype -> name . kind parameter
	(28) functortype -> name . kind parameter execution
	(12) containerinvokation -> name . container execution
	(2) containeraccess -> name . container
	(4) invokationwithexecution -> name . execution
	(81) protoexpression -> name .
	(62) explicitaccess -> name . EXPLICITACCESS name
	(83) sequence -> name . SEQUENCE name
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(123) shorttype -> name . SHORTTYPE
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(37) open_parameter -> . OPEN_PARAMETER
	(48) open_kind -> . OPEN_KIND
	(42) open_container -> . OPEN_CONTAINER
	(32) open_execution -> . OPEN_EXECUTION
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 81 (protoexpression -> name .)
	EOL             reduce using rule 81 (protoexpression -> name .)
	CLOSE_CONTAINER reduce using rule 81 (protoexpression -> name .)
	CLOSE_EXECUTION reduce using rule 81 (protoexpression -> name .)
	CLOSE_PARAMETER reduce using rule 81 (protoexpression -> name .)
	EXPLICITACCESS  shift and go to state 84
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NUMBER          shift and go to state 43
	NAME            shift and go to state 25
	OPEN_PARAMETER  shift and go to state 73
	OPEN_KIND       shift and go to state 26
	OPEN_CONTAINER  shift and go to state 62
	OPEN_EXECUTION  shift and go to state 63
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	name                           shift and go to state 79
	parameter                      shift and go to state 80
	container                      shift and go to state 81
	execution                      shift and go to state 82
	kind                           shift and go to state 83
	number                         shift and go to state 86
	string                         shift and go to state 87
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	open_parameter                 shift and go to state 72
	open_kind                      shift and go to state 18
	open_container                 shift and go to state 58
	open_execution                 shift and go to state 59
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	shorttype                      shift and go to state 40

state 18

	(44) kind -> open_kind . open_kind
	(45) kind -> open_kind . limitedexpression open_kind
	(46) kind -> open_kind . limitedexpression close_expression
	(47) kind -> open_kind . limitedexpression
	(48) open_kind -> . OPEN_KIND
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(127) name -> . NAME
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	OPEN_KIND       shift and go to state 26
	NAME            shift and go to state 25
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	open_kind                      shift and go to state 93
	limitedexpression              shift and go to state 94
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	name                           shift and go to state 77
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	standardinvokation             shift and go to state 50
	simpletype                     shift and go to state 61
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 19

	(64) limitedexpressionset -> completelimitedexpression .
	NAME            reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	SEQUENCE        reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	UPPERSCOPEOPTION2 reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	UPPERSCOPEOPTION1 reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	NUMBER          reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	FORMATTEDSTRING reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	UNFORMATTEDSTRING reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	CLOSE_EXPRESSION reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	EOL             reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	CLOSE_CONTAINER reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	CLOSE_EXECUTION reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)
	CLOSE_PARAMETER reduce using rule 64 (limitedexpressionset -> completelimitedexpression .)


state 20

	(65) limitedexpression -> containerinvokation .
	CLOSE_EXPRESSION reduce using rule 65 (limitedexpression -> containerinvokation .)
	EOL             reduce using rule 65 (limitedexpression -> containerinvokation .)
	OPEN_KIND       reduce using rule 65 (limitedexpression -> containerinvokation .)
	OPEN_EXECUTION  reduce using rule 65 (limitedexpression -> containerinvokation .)
	OPEN_PARAMETER  reduce using rule 65 (limitedexpression -> containerinvokation .)
	NAME            reduce using rule 65 (limitedexpression -> containerinvokation .)
	NUMBER          reduce using rule 65 (limitedexpression -> containerinvokation .)
	CLOSE_CONTAINER reduce using rule 65 (limitedexpression -> containerinvokation .)
	CLOSE_EXECUTION reduce using rule 65 (limitedexpression -> containerinvokation .)
	CLOSE_PARAMETER reduce using rule 65 (limitedexpression -> containerinvokation .)


state 21

	(66) limitedexpression -> containeraccess .
	(11) containerinvokation -> containeraccess . execution
	(88) autofillaccessorinvokation -> containeraccess . autofillaccessorinvokation
	(99) autofillaccessorinvokation -> containeraccess . name
	(108) autofillaccessorinvokation -> containeraccess . sequence
	(109) autofillaccessorinvokation -> containeraccess . standardinvokation
	(110) autofillaccessorinvokation -> containeraccess . autofillinvokation
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(32) open_execution -> . OPEN_EXECUTION
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 66 (limitedexpression -> containeraccess .)
	EOL             reduce using rule 66 (limitedexpression -> containeraccess .)
	OPEN_KIND       reduce using rule 66 (limitedexpression -> containeraccess .)
	OPEN_EXECUTION  reduce using rule 66 (limitedexpression -> containeraccess .)
	OPEN_PARAMETER  reduce using rule 66 (limitedexpression -> containeraccess .)
	CLOSE_CONTAINER reduce using rule 66 (limitedexpression -> containeraccess .)
	CLOSE_EXECUTION reduce using rule 66 (limitedexpression -> containeraccess .)
	CLOSE_PARAMETER reduce using rule 66 (limitedexpression -> containeraccess .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	containeraccess                shift and go to state 95
	execution                      shift and go to state 96
	autofillaccessorinvokation     shift and go to state 97
	name                           shift and go to state 98
	sequence                       shift and go to state 99
	standardinvokation             shift and go to state 100
	autofillinvokation             shift and go to state 101
	open_execution                 shift and go to state 59
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 22

	(67) limitedexpression -> invokationwithexecution .
	CLOSE_EXPRESSION reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	EOL             reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	OPEN_KIND       reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	OPEN_EXECUTION  reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	OPEN_PARAMETER  reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	NAME            reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	NUMBER          reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	CLOSE_CONTAINER reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	CLOSE_EXECUTION reduce using rule 67 (limitedexpression -> invokationwithexecution .)
	CLOSE_PARAMETER reduce using rule 67 (limitedexpression -> invokationwithexecution .)


state 23

	(68) limitedexpression -> protoexpressionset .
	(70) protoexpressionset -> protoexpressionset . completeprotoexpression
	(56) completeprotoexpression -> . protoexpression close_expression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(127) name -> . NAME
	(123) shorttype -> . name SHORTTYPE
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXPRESSION reduce using rule 68 (limitedexpression -> protoexpressionset .)
	EOL             reduce using rule 68 (limitedexpression -> protoexpressionset .)
	OPEN_KIND       reduce using rule 68 (limitedexpression -> protoexpressionset .)
	OPEN_EXECUTION  reduce using rule 68 (limitedexpression -> protoexpressionset .)
	OPEN_PARAMETER  reduce using rule 68 (limitedexpression -> protoexpressionset .)
	CLOSE_CONTAINER reduce using rule 68 (limitedexpression -> protoexpressionset .)
	CLOSE_EXECUTION reduce using rule 68 (limitedexpression -> protoexpressionset .)
	CLOSE_PARAMETER reduce using rule 68 (limitedexpression -> protoexpressionset .)
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	NAME            shift and go to state 25
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	completeprotoexpression        shift and go to state 102
	protoexpression                shift and go to state 103
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	name                           shift and go to state 104
	shorttype                      shift and go to state 40
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 24

	(69) limitedexpression -> protoexpression .
	(56) completeprotoexpression -> protoexpression . close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION reduce using rule 69 (limitedexpression -> protoexpression .)
	EOL             reduce using rule 69 (limitedexpression -> protoexpression .)
	OPEN_KIND       reduce using rule 69 (limitedexpression -> protoexpression .)
	OPEN_EXECUTION  reduce using rule 69 (limitedexpression -> protoexpression .)
	OPEN_PARAMETER  reduce using rule 69 (limitedexpression -> protoexpression .)
	NAME            reduce using rule 69 (limitedexpression -> protoexpression .)
	NUMBER          reduce using rule 69 (limitedexpression -> protoexpression .)
	CLOSE_CONTAINER reduce using rule 69 (limitedexpression -> protoexpression .)
	CLOSE_EXECUTION reduce using rule 69 (limitedexpression -> protoexpression .)
	CLOSE_PARAMETER reduce using rule 69 (limitedexpression -> protoexpression .)

	close_expression               shift and go to state 105

state 25

	(127) name -> NAME .
	EXPLICITACCESS  reduce using rule 127 (name -> NAME .)
	SEQUENCE        reduce using rule 127 (name -> NAME .)
	SHORTTYPE       reduce using rule 127 (name -> NAME .)
	NUMBER          reduce using rule 127 (name -> NAME .)
	NAME            reduce using rule 127 (name -> NAME .)
	OPEN_PARAMETER  reduce using rule 127 (name -> NAME .)
	OPEN_KIND       reduce using rule 127 (name -> NAME .)
	OPEN_CONTAINER  reduce using rule 127 (name -> NAME .)
	OPEN_EXECUTION  reduce using rule 127 (name -> NAME .)
	FORMATTEDSTRING reduce using rule 127 (name -> NAME .)
	UNFORMATTEDSTRING reduce using rule 127 (name -> NAME .)
	CLOSE_EXPRESSION reduce using rule 127 (name -> NAME .)
	EOL             reduce using rule 127 (name -> NAME .)
	CLOSE_CONTAINER reduce using rule 127 (name -> NAME .)
	CLOSE_EXECUTION reduce using rule 127 (name -> NAME .)
	CLOSE_PARAMETER reduce using rule 127 (name -> NAME .)


state 26

	(48) open_kind -> OPEN_KIND .
	OPEN_KIND       reduce using rule 48 (open_kind -> OPEN_KIND .)
	NAME            reduce using rule 48 (open_kind -> OPEN_KIND .)
	SEQUENCE        reduce using rule 48 (open_kind -> OPEN_KIND .)
	UPPERSCOPEOPTION2 reduce using rule 48 (open_kind -> OPEN_KIND .)
	UPPERSCOPEOPTION1 reduce using rule 48 (open_kind -> OPEN_KIND .)
	NUMBER          reduce using rule 48 (open_kind -> OPEN_KIND .)
	FORMATTEDSTRING reduce using rule 48 (open_kind -> OPEN_KIND .)
	UNFORMATTEDSTRING reduce using rule 48 (open_kind -> OPEN_KIND .)
	CLOSE_EXPRESSION reduce using rule 48 (open_kind -> OPEN_KIND .)
	EOL             reduce using rule 48 (open_kind -> OPEN_KIND .)
	OPEN_EXECUTION  reduce using rule 48 (open_kind -> OPEN_KIND .)
	OPEN_PARAMETER  reduce using rule 48 (open_kind -> OPEN_KIND .)
	CLOSE_CONTAINER reduce using rule 48 (open_kind -> OPEN_KIND .)
	CLOSE_EXECUTION reduce using rule 48 (open_kind -> OPEN_KIND .)
	CLOSE_PARAMETER reduce using rule 48 (open_kind -> OPEN_KIND .)


state 27

	(71) protoexpressionset -> completeprotoexpression .
	SEQUENCE        reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	UPPERSCOPEOPTION2 reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	UPPERSCOPEOPTION1 reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	NUMBER          reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	NAME            reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	FORMATTEDSTRING reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	UNFORMATTEDSTRING reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	CLOSE_EXPRESSION reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	EOL             reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	OPEN_KIND       reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	OPEN_EXECUTION  reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	OPEN_PARAMETER  reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	CLOSE_CONTAINER reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	CLOSE_EXECUTION reduce using rule 71 (protoexpressionset -> completeprotoexpression .)
	CLOSE_PARAMETER reduce using rule 71 (protoexpressionset -> completeprotoexpression .)


state 28

	(72) protoexpression -> globalscope .
	CLOSE_EXPRESSION reduce using rule 72 (protoexpression -> globalscope .)
	EOL             reduce using rule 72 (protoexpression -> globalscope .)
	OPEN_KIND       reduce using rule 72 (protoexpression -> globalscope .)
	OPEN_EXECUTION  reduce using rule 72 (protoexpression -> globalscope .)
	OPEN_PARAMETER  reduce using rule 72 (protoexpression -> globalscope .)
	NAME            reduce using rule 72 (protoexpression -> globalscope .)
	NUMBER          reduce using rule 72 (protoexpression -> globalscope .)
	CLOSE_CONTAINER reduce using rule 72 (protoexpression -> globalscope .)
	CLOSE_EXECUTION reduce using rule 72 (protoexpression -> globalscope .)
	CLOSE_PARAMETER reduce using rule 72 (protoexpression -> globalscope .)


state 29

	(73) protoexpression -> upperscopeoption2 .
	CLOSE_EXPRESSION reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	EOL             reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	OPEN_KIND       reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	OPEN_EXECUTION  reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	OPEN_PARAMETER  reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	NAME            reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	NUMBER          reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	CLOSE_CONTAINER reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	CLOSE_EXECUTION reduce using rule 73 (protoexpression -> upperscopeoption2 .)
	CLOSE_PARAMETER reduce using rule 73 (protoexpression -> upperscopeoption2 .)


state 30

	(74) protoexpression -> upperscopeoption1 .
	CLOSE_EXPRESSION reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	EOL             reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	OPEN_KIND       reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	OPEN_EXECUTION  reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	OPEN_PARAMETER  reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	NAME            reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	NUMBER          reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	CLOSE_CONTAINER reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	CLOSE_EXECUTION reduce using rule 74 (protoexpression -> upperscopeoption1 .)
	CLOSE_PARAMETER reduce using rule 74 (protoexpression -> upperscopeoption1 .)


state 31

	(75) protoexpression -> explicitaccess .
	(61) explicitaccess -> explicitaccess . EXPLICITACCESS name
	CLOSE_EXPRESSION reduce using rule 75 (protoexpression -> explicitaccess .)
	EOL             reduce using rule 75 (protoexpression -> explicitaccess .)
	OPEN_KIND       reduce using rule 75 (protoexpression -> explicitaccess .)
	OPEN_EXECUTION  reduce using rule 75 (protoexpression -> explicitaccess .)
	OPEN_PARAMETER  reduce using rule 75 (protoexpression -> explicitaccess .)
	NAME            reduce using rule 75 (protoexpression -> explicitaccess .)
	NUMBER          reduce using rule 75 (protoexpression -> explicitaccess .)
	CLOSE_CONTAINER reduce using rule 75 (protoexpression -> explicitaccess .)
	CLOSE_EXECUTION reduce using rule 75 (protoexpression -> explicitaccess .)
	CLOSE_PARAMETER reduce using rule 75 (protoexpression -> explicitaccess .)
	EXPLICITACCESS  shift and go to state 106


state 32

	(76) protoexpression -> sequence .
	(82) sequence -> sequence . SEQUENCE name
	(86) autofillaccessorinvokation -> sequence . autofillaccessorinvokation
	(97) autofillaccessorinvokation -> sequence . name
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	CLOSE_EXPRESSION reduce using rule 76 (protoexpression -> sequence .)
	EOL             reduce using rule 76 (protoexpression -> sequence .)
	OPEN_KIND       reduce using rule 76 (protoexpression -> sequence .)
	OPEN_EXECUTION  reduce using rule 76 (protoexpression -> sequence .)
	OPEN_PARAMETER  reduce using rule 76 (protoexpression -> sequence .)
	CLOSE_CONTAINER reduce using rule 76 (protoexpression -> sequence .)
	CLOSE_EXECUTION reduce using rule 76 (protoexpression -> sequence .)
	CLOSE_PARAMETER reduce using rule 76 (protoexpression -> sequence .)
	SEQUENCE        shift and go to state 108
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	sequence                       shift and go to state 107
	name                           shift and go to state 109
	autofillaccessorinvokation     shift and go to state 110
	number                         shift and go to state 60
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61

state 33

	(77) protoexpression -> autofillinvokation .
	CLOSE_EXPRESSION reduce using rule 77 (protoexpression -> autofillinvokation .)
	EOL             reduce using rule 77 (protoexpression -> autofillinvokation .)
	OPEN_KIND       reduce using rule 77 (protoexpression -> autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 77 (protoexpression -> autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 77 (protoexpression -> autofillinvokation .)
	NAME            reduce using rule 77 (protoexpression -> autofillinvokation .)
	NUMBER          reduce using rule 77 (protoexpression -> autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 77 (protoexpression -> autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 77 (protoexpression -> autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 77 (protoexpression -> autofillinvokation .)


state 34

	(78) protoexpression -> autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	EOL             reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 78 (protoexpression -> autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	name                           shift and go to state 111
	standardinvokation             shift and go to state 112
	containeraccess                shift and go to state 113
	autofillinvokation             shift and go to state 114
	sequence                       shift and go to state 115
	number                         shift and go to state 116
	shorttype                      shift and go to state 40

state 35

	(79) protoexpression -> string .
	CLOSE_EXPRESSION reduce using rule 79 (protoexpression -> string .)
	EOL             reduce using rule 79 (protoexpression -> string .)
	OPEN_KIND       reduce using rule 79 (protoexpression -> string .)
	OPEN_EXECUTION  reduce using rule 79 (protoexpression -> string .)
	OPEN_PARAMETER  reduce using rule 79 (protoexpression -> string .)
	NAME            reduce using rule 79 (protoexpression -> string .)
	NUMBER          reduce using rule 79 (protoexpression -> string .)
	CLOSE_CONTAINER reduce using rule 79 (protoexpression -> string .)
	CLOSE_EXECUTION reduce using rule 79 (protoexpression -> string .)
	CLOSE_PARAMETER reduce using rule 79 (protoexpression -> string .)


state 36

	(80) protoexpression -> number .
	(84) autofillaccessorinvokation -> number . autofillaccessorinvokation
	(95) autofillaccessorinvokation -> number . name
	(128) number -> number . EXPLICITACCESS NUMBER
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	CLOSE_EXPRESSION reduce using rule 80 (protoexpression -> number .)
	EOL             reduce using rule 80 (protoexpression -> number .)
	OPEN_KIND       reduce using rule 80 (protoexpression -> number .)
	OPEN_EXECUTION  reduce using rule 80 (protoexpression -> number .)
	OPEN_PARAMETER  reduce using rule 80 (protoexpression -> number .)
	CLOSE_CONTAINER reduce using rule 80 (protoexpression -> number .)
	CLOSE_EXECUTION reduce using rule 80 (protoexpression -> number .)
	CLOSE_PARAMETER reduce using rule 80 (protoexpression -> number .)
	EXPLICITACCESS  shift and go to state 119
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	number                         shift and go to state 60
	autofillaccessorinvokation     shift and go to state 117
	name                           shift and go to state 118
	sequence                       shift and go to state 107
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61

state 37

	(126) globalscope -> SEQUENCE . NAME
	NAME            shift and go to state 120


state 38

	(125) upperscopeoption2 -> UPPERSCOPEOPTION2 . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 121

state 39

	(124) upperscopeoption1 -> UPPERSCOPEOPTION1 . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 122

state 40

	(115) autofillinvokation -> shorttype . standardinvokation
	(116) autofillinvokation -> shorttype . containeraccess
	(117) autofillinvokation -> shorttype . container
	(118) autofillinvokation -> shorttype . sequence
	(119) autofillinvokation -> shorttype . number
	(120) autofillinvokation -> shorttype . string
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(127) name -> . NAME
	(42) open_container -> . OPEN_CONTAINER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	NUMBER          shift and go to state 43
	NAME            shift and go to state 25
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	standardinvokation             shift and go to state 123
	containeraccess                shift and go to state 124
	container                      shift and go to state 125
	sequence                       shift and go to state 126
	number                         shift and go to state 127
	string                         shift and go to state 128
	name                           shift and go to state 129
	open_container                 shift and go to state 58
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 41

	(51) string -> formattedstring .
	CLOSE_EXPRESSION reduce using rule 51 (string -> formattedstring .)
	EOL             reduce using rule 51 (string -> formattedstring .)
	NAME            reduce using rule 51 (string -> formattedstring .)
	NUMBER          reduce using rule 51 (string -> formattedstring .)
	CLOSE_CONTAINER reduce using rule 51 (string -> formattedstring .)
	CLOSE_EXECUTION reduce using rule 51 (string -> formattedstring .)
	CLOSE_PARAMETER reduce using rule 51 (string -> formattedstring .)
	OPEN_KIND       reduce using rule 51 (string -> formattedstring .)
	OPEN_EXECUTION  reduce using rule 51 (string -> formattedstring .)
	OPEN_PARAMETER  reduce using rule 51 (string -> formattedstring .)


state 42

	(52) string -> unformattedstring .
	CLOSE_EXPRESSION reduce using rule 52 (string -> unformattedstring .)
	EOL             reduce using rule 52 (string -> unformattedstring .)
	NAME            reduce using rule 52 (string -> unformattedstring .)
	NUMBER          reduce using rule 52 (string -> unformattedstring .)
	CLOSE_CONTAINER reduce using rule 52 (string -> unformattedstring .)
	CLOSE_EXECUTION reduce using rule 52 (string -> unformattedstring .)
	CLOSE_PARAMETER reduce using rule 52 (string -> unformattedstring .)
	OPEN_KIND       reduce using rule 52 (string -> unformattedstring .)
	OPEN_EXECUTION  reduce using rule 52 (string -> unformattedstring .)
	OPEN_PARAMETER  reduce using rule 52 (string -> unformattedstring .)


state 43

	(129) number -> NUMBER . EXPLICITACCESS NUMBER
	(130) number -> NUMBER .
	EXPLICITACCESS  reduce using rule 130 (number -> NUMBER .)
	NAME            reduce using rule 130 (number -> NUMBER .)
	NUMBER          reduce using rule 130 (number -> NUMBER .)
	CLOSE_EXPRESSION reduce using rule 130 (number -> NUMBER .)
	EOL             reduce using rule 130 (number -> NUMBER .)
	CLOSE_CONTAINER reduce using rule 130 (number -> NUMBER .)
	CLOSE_EXECUTION reduce using rule 130 (number -> NUMBER .)
	CLOSE_PARAMETER reduce using rule 130 (number -> NUMBER .)
	OPEN_KIND       reduce using rule 130 (number -> NUMBER .)
	OPEN_EXECUTION  reduce using rule 130 (number -> NUMBER .)
	OPEN_PARAMETER  reduce using rule 130 (number -> NUMBER .)


state 44

	(50) formattedstring -> FORMATTEDSTRING .
	CLOSE_EXPRESSION reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	EOL             reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	NAME            reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	NUMBER          reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	CLOSE_CONTAINER reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	CLOSE_EXECUTION reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	CLOSE_PARAMETER reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	OPEN_KIND       reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	OPEN_EXECUTION  reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)
	OPEN_PARAMETER  reduce using rule 50 (formattedstring -> FORMATTEDSTRING .)


state 45

	(49) unformattedstring -> UNFORMATTEDSTRING .
	CLOSE_EXPRESSION reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	EOL             reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	NAME            reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	NUMBER          reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	CLOSE_CONTAINER reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	CLOSE_EXECUTION reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	CLOSE_PARAMETER reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	OPEN_KIND       reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	OPEN_EXECUTION  reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)
	OPEN_PARAMETER  reduce using rule 49 (unformattedstring -> UNFORMATTEDSTRING .)


state 46

	(15) fullexpressionset -> fullexpressionset completefullexpression .
	CLOSE_EXPRESSION reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	EOL             reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	NAME            reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	OPEN_KIND       reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	SEQUENCE        reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	UPPERSCOPEOPTION2 reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	UPPERSCOPEOPTION1 reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	NUMBER          reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	FORMATTEDSTRING reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	UNFORMATTEDSTRING reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	$end            reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	CLOSE_CONTAINER reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	CLOSE_EXECUTION reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)
	CLOSE_PARAMETER reduce using rule 15 (fullexpressionset -> fullexpressionset completefullexpression .)


state 47

	(57) close_expression -> close_expression EOL .
	EOL             reduce using rule 57 (close_expression -> close_expression EOL .)
	CLOSE_EXPRESSION reduce using rule 57 (close_expression -> close_expression EOL .)
	NAME            reduce using rule 57 (close_expression -> close_expression EOL .)
	OPEN_KIND       reduce using rule 57 (close_expression -> close_expression EOL .)
	SEQUENCE        reduce using rule 57 (close_expression -> close_expression EOL .)
	UPPERSCOPEOPTION2 reduce using rule 57 (close_expression -> close_expression EOL .)
	UPPERSCOPEOPTION1 reduce using rule 57 (close_expression -> close_expression EOL .)
	NUMBER          reduce using rule 57 (close_expression -> close_expression EOL .)
	FORMATTEDSTRING reduce using rule 57 (close_expression -> close_expression EOL .)
	UNFORMATTEDSTRING reduce using rule 57 (close_expression -> close_expression EOL .)
	$end            reduce using rule 57 (close_expression -> close_expression EOL .)
	CLOSE_CONTAINER reduce using rule 57 (close_expression -> close_expression EOL .)
	CLOSE_EXECUTION reduce using rule 57 (close_expression -> close_expression EOL .)
	CLOSE_PARAMETER reduce using rule 57 (close_expression -> close_expression EOL .)
	OPEN_EXECUTION  reduce using rule 57 (close_expression -> close_expression EOL .)
	OPEN_PARAMETER  reduce using rule 57 (close_expression -> close_expression EOL .)


state 48

	(58) close_expression -> close_expression CLOSE_EXPRESSION .
	EOL             reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	CLOSE_EXPRESSION reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	NAME            reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	OPEN_KIND       reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	SEQUENCE        reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	UPPERSCOPEOPTION2 reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	UPPERSCOPEOPTION1 reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	NUMBER          reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	FORMATTEDSTRING reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	UNFORMATTEDSTRING reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	$end            reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	CLOSE_CONTAINER reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	CLOSE_EXECUTION reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	CLOSE_PARAMETER reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	OPEN_EXECUTION  reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)
	OPEN_PARAMETER  reduce using rule 58 (close_expression -> close_expression CLOSE_EXPRESSION .)


state 49

	(54) completefullexpression -> fullexpression close_expression .
	(57) close_expression -> close_expression . EOL
	(58) close_expression -> close_expression . CLOSE_EXPRESSION
	CLOSE_EXPRESSION reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	EOL             reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	NAME            reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	OPEN_KIND       reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	SEQUENCE        reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	UPPERSCOPEOPTION2 reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	UPPERSCOPEOPTION1 reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	NUMBER          reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	FORMATTEDSTRING reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	UNFORMATTEDSTRING reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	$end            reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	CLOSE_CONTAINER reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	CLOSE_EXECUTION reduce using rule 54 (completefullexpression -> fullexpression close_expression .)
	CLOSE_PARAMETER reduce using rule 54 (completefullexpression -> fullexpression close_expression .)


state 50

	(87) autofillaccessorinvokation -> standardinvokation . autofillaccessorinvokation
	(98) autofillaccessorinvokation -> standardinvokation . name
	(105) autofillaccessorinvokation -> standardinvokation . containeraccess
	(106) autofillaccessorinvokation -> standardinvokation . sequence
	(107) autofillaccessorinvokation -> standardinvokation . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(2) containeraccess -> . name container
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	standardinvokation             shift and go to state 50
	autofillaccessorinvokation     shift and go to state 53
	name                           shift and go to state 54
	containeraccess                shift and go to state 55
	sequence                       shift and go to state 56
	autofillinvokation             shift and go to state 57
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 51

	(13) containerinvokationwithparameters -> standardinvokation container . execution
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(32) open_execution -> . OPEN_EXECUTION
	OPEN_EXECUTION  shift and go to state 63

	execution                      shift and go to state 131
	open_execution                 shift and go to state 59

state 52

	(10) invokationwithparametersandexecution -> standardinvokation execution .
	CLOSE_EXPRESSION reduce using rule 10 (invokationwithparametersandexecution -> standardinvokation execution .)
	EOL             reduce using rule 10 (invokationwithparametersandexecution -> standardinvokation execution .)
	CLOSE_CONTAINER reduce using rule 10 (invokationwithparametersandexecution -> standardinvokation execution .)
	CLOSE_EXECUTION reduce using rule 10 (invokationwithparametersandexecution -> standardinvokation execution .)
	CLOSE_PARAMETER reduce using rule 10 (invokationwithparametersandexecution -> standardinvokation execution .)


state 53

	(87) autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	EOL             reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 87 (autofillaccessorinvokation -> standardinvokation autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	standardinvokation             shift and go to state 112
	name                           shift and go to state 111
	containeraccess                shift and go to state 113
	autofillinvokation             shift and go to state 114
	sequence                       shift and go to state 115
	number                         shift and go to state 116
	shorttype                      shift and go to state 40

state 54

	(98) autofillaccessorinvokation -> standardinvokation name .
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(2) containeraccess -> name . container
	(83) sequence -> name . SEQUENCE name
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(3) standardinvokation -> name . parameter
	(1) simpletype -> name . kind
	(123) shorttype -> name . SHORTTYPE
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(123) shorttype -> . name SHORTTYPE
	(42) open_container -> . OPEN_CONTAINER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(37) open_parameter -> . OPEN_PARAMETER
	(48) open_kind -> . OPEN_KIND
	CLOSE_EXPRESSION reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	EOL             reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	CLOSE_CONTAINER reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	CLOSE_EXECUTION reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	CLOSE_PARAMETER reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	OPEN_EXECUTION  reduce using rule 98 (autofillaccessorinvokation -> standardinvokation name .)
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45
	OPEN_PARAMETER  shift and go to state 73
	OPEN_KIND       shift and go to state 26

	standardinvokation             shift and go to state 88
	name                           shift and go to state 79
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	container                      shift and go to state 132
	number                         shift and go to state 86
	string                         shift and go to state 87
	parameter                      shift and go to state 133
	kind                           shift and go to state 134
	shorttype                      shift and go to state 40
	open_container                 shift and go to state 58
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	open_parameter                 shift and go to state 72
	open_kind                      shift and go to state 18

state 55

	(105) autofillaccessorinvokation -> standardinvokation containeraccess .
	(88) autofillaccessorinvokation -> containeraccess . autofillaccessorinvokation
	(99) autofillaccessorinvokation -> containeraccess . name
	(108) autofillaccessorinvokation -> containeraccess . sequence
	(109) autofillaccessorinvokation -> containeraccess . standardinvokation
	(110) autofillaccessorinvokation -> containeraccess . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	EOL             reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	CLOSE_CONTAINER reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	CLOSE_EXECUTION reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	CLOSE_PARAMETER reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	OPEN_KIND       reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	OPEN_EXECUTION  reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	OPEN_PARAMETER  reduce using rule 105 (autofillaccessorinvokation -> standardinvokation containeraccess .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	standardinvokation             shift and go to state 100
	containeraccess                shift and go to state 95
	autofillaccessorinvokation     shift and go to state 97
	name                           shift and go to state 98
	sequence                       shift and go to state 99
	autofillinvokation             shift and go to state 101
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 56

	(106) autofillaccessorinvokation -> standardinvokation sequence .
	(86) autofillaccessorinvokation -> sequence . autofillaccessorinvokation
	(97) autofillaccessorinvokation -> sequence . name
	(82) sequence -> sequence . SEQUENCE name
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	CLOSE_EXPRESSION reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	EOL             reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	CLOSE_CONTAINER reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	CLOSE_EXECUTION reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	CLOSE_PARAMETER reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	OPEN_KIND       reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	OPEN_EXECUTION  reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	OPEN_PARAMETER  reduce using rule 106 (autofillaccessorinvokation -> standardinvokation sequence .)
	SEQUENCE        shift and go to state 108
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	standardinvokation             shift and go to state 50
	sequence                       shift and go to state 107
	autofillaccessorinvokation     shift and go to state 110
	name                           shift and go to state 109
	number                         shift and go to state 60
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61

state 57

	(107) autofillaccessorinvokation -> standardinvokation autofillinvokation .
	NAME            reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	NUMBER          reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	CLOSE_EXPRESSION reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	EOL             reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	OPEN_KIND       reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 107 (autofillaccessorinvokation -> standardinvokation autofillinvokation .)


state 58

	(39) container -> open_container . fullexpression close_container
	(40) container -> open_container . close_container
	(41) container -> open_container . fullexpressionset close_container
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(43) close_container -> . CLOSE_CONTAINER
	(15) fullexpressionset -> . fullexpressionset completefullexpression
	(16) fullexpressionset -> . completefullexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_CONTAINER shift and go to state 138
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	fullexpression                 shift and go to state 135
	close_container                shift and go to state 136
	fullexpressionset              shift and go to state 137
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	completefullexpression         shift and go to state 2
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	close_expression               shift and go to state 3
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 59

	(29) execution -> open_execution . fullexpression close_execution
	(30) execution -> open_execution . close_execution
	(31) execution -> open_execution . fullexpressionset close_execution
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(33) close_execution -> . CLOSE_EXECUTION
	(15) fullexpressionset -> . fullexpressionset completefullexpression
	(16) fullexpressionset -> . completefullexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXECUTION shift and go to state 142
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	fullexpression                 shift and go to state 139
	close_execution                shift and go to state 140
	fullexpressionset              shift and go to state 141
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	completefullexpression         shift and go to state 2
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	close_expression               shift and go to state 3
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 60

	(84) autofillaccessorinvokation -> number . autofillaccessorinvokation
	(95) autofillaccessorinvokation -> number . name
	(128) number -> number . EXPLICITACCESS NUMBER
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	EXPLICITACCESS  shift and go to state 119
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	number                         shift and go to state 60
	autofillaccessorinvokation     shift and go to state 117
	name                           shift and go to state 118
	sequence                       shift and go to state 107
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61

state 61

	(89) autofillaccessorinvokation -> simpletype . autofillaccessorinvokation
	(100) autofillaccessorinvokation -> simpletype . name
	(111) autofillaccessorinvokation -> simpletype . sequence
	(112) autofillaccessorinvokation -> simpletype . standardinvokation
	(113) autofillaccessorinvokation -> simpletype . containeraccess
	(114) autofillaccessorinvokation -> simpletype . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	simpletype                     shift and go to state 61
	autofillaccessorinvokation     shift and go to state 66
	name                           shift and go to state 67
	sequence                       shift and go to state 68
	standardinvokation             shift and go to state 69
	containeraccess                shift and go to state 70
	autofillinvokation             shift and go to state 71
	number                         shift and go to state 60
	shorttype                      shift and go to state 40

state 62

	(42) open_container -> OPEN_CONTAINER .
	CLOSE_CONTAINER reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	NAME            reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	OPEN_KIND       reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	CLOSE_EXPRESSION reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	EOL             reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	SEQUENCE        reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	UPPERSCOPEOPTION2 reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	UPPERSCOPEOPTION1 reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	NUMBER          reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	FORMATTEDSTRING reduce using rule 42 (open_container -> OPEN_CONTAINER .)
	UNFORMATTEDSTRING reduce using rule 42 (open_container -> OPEN_CONTAINER .)


state 63

	(32) open_execution -> OPEN_EXECUTION .
	CLOSE_EXECUTION reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	NAME            reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	OPEN_KIND       reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	CLOSE_EXPRESSION reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	EOL             reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	SEQUENCE        reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	UPPERSCOPEOPTION2 reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	UPPERSCOPEOPTION1 reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	NUMBER          reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	FORMATTEDSTRING reduce using rule 32 (open_execution -> OPEN_EXECUTION .)
	UNFORMATTEDSTRING reduce using rule 32 (open_execution -> OPEN_EXECUTION .)


state 64

	(7) executivetype -> simpletype execution .
	CLOSE_EXPRESSION reduce using rule 7 (executivetype -> simpletype execution .)
	EOL             reduce using rule 7 (executivetype -> simpletype execution .)
	CLOSE_CONTAINER reduce using rule 7 (executivetype -> simpletype execution .)
	CLOSE_EXECUTION reduce using rule 7 (executivetype -> simpletype execution .)
	CLOSE_PARAMETER reduce using rule 7 (executivetype -> simpletype execution .)


state 65

	(6) structtype -> simpletype parameter .
	OPEN_EXECUTION  reduce using rule 6 (structtype -> simpletype parameter .)
	CLOSE_EXPRESSION reduce using rule 6 (structtype -> simpletype parameter .)
	EOL             reduce using rule 6 (structtype -> simpletype parameter .)
	CLOSE_CONTAINER reduce using rule 6 (structtype -> simpletype parameter .)
	CLOSE_EXECUTION reduce using rule 6 (structtype -> simpletype parameter .)
	CLOSE_PARAMETER reduce using rule 6 (structtype -> simpletype parameter .)


state 66

	(89) autofillaccessorinvokation -> simpletype autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	EOL             reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 89 (autofillaccessorinvokation -> simpletype autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	name                           shift and go to state 111
	standardinvokation             shift and go to state 112
	containeraccess                shift and go to state 113
	autofillinvokation             shift and go to state 114
	sequence                       shift and go to state 115
	number                         shift and go to state 116
	shorttype                      shift and go to state 40

state 67

	(100) autofillaccessorinvokation -> simpletype name .
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(83) sequence -> name . SEQUENCE name
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(1) simpletype -> name . kind
	(123) shorttype -> name . SHORTTYPE
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(48) open_kind -> . OPEN_KIND
	CLOSE_EXPRESSION reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	EOL             reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	CLOSE_CONTAINER reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	CLOSE_EXECUTION reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	CLOSE_PARAMETER reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	OPEN_EXECUTION  reduce using rule 100 (autofillaccessorinvokation -> simpletype name .)
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45
	OPEN_KIND       shift and go to state 26

	name                           shift and go to state 79
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	parameter                      shift and go to state 133
	container                      shift and go to state 132
	number                         shift and go to state 86
	string                         shift and go to state 87
	kind                           shift and go to state 134
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	open_kind                      shift and go to state 18

state 68

	(111) autofillaccessorinvokation -> simpletype sequence .
	(86) autofillaccessorinvokation -> sequence . autofillaccessorinvokation
	(97) autofillaccessorinvokation -> sequence . name
	(82) sequence -> sequence . SEQUENCE name
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	CLOSE_EXPRESSION reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	EOL             reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	CLOSE_CONTAINER reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	CLOSE_EXECUTION reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	CLOSE_PARAMETER reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	OPEN_KIND       reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	OPEN_EXECUTION  reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	OPEN_PARAMETER  reduce using rule 111 (autofillaccessorinvokation -> simpletype sequence .)
	SEQUENCE        shift and go to state 108
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	simpletype                     shift and go to state 61
	sequence                       shift and go to state 107
	autofillaccessorinvokation     shift and go to state 110
	name                           shift and go to state 109
	number                         shift and go to state 60
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95

state 69

	(112) autofillaccessorinvokation -> simpletype standardinvokation .
	(87) autofillaccessorinvokation -> standardinvokation . autofillaccessorinvokation
	(98) autofillaccessorinvokation -> standardinvokation . name
	(105) autofillaccessorinvokation -> standardinvokation . containeraccess
	(106) autofillaccessorinvokation -> standardinvokation . sequence
	(107) autofillaccessorinvokation -> standardinvokation . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(2) containeraccess -> . name container
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	EOL             reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	CLOSE_CONTAINER reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	CLOSE_EXECUTION reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	CLOSE_PARAMETER reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	OPEN_KIND       reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	OPEN_EXECUTION  reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	OPEN_PARAMETER  reduce using rule 112 (autofillaccessorinvokation -> simpletype standardinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	simpletype                     shift and go to state 61
	standardinvokation             shift and go to state 50
	autofillaccessorinvokation     shift and go to state 53
	name                           shift and go to state 54
	containeraccess                shift and go to state 55
	sequence                       shift and go to state 56
	autofillinvokation             shift and go to state 57
	number                         shift and go to state 60
	shorttype                      shift and go to state 40

state 70

	(113) autofillaccessorinvokation -> simpletype containeraccess .
	(88) autofillaccessorinvokation -> containeraccess . autofillaccessorinvokation
	(99) autofillaccessorinvokation -> containeraccess . name
	(108) autofillaccessorinvokation -> containeraccess . sequence
	(109) autofillaccessorinvokation -> containeraccess . standardinvokation
	(110) autofillaccessorinvokation -> containeraccess . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	EOL             reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	CLOSE_CONTAINER reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	CLOSE_EXECUTION reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	CLOSE_PARAMETER reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	OPEN_KIND       reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	OPEN_EXECUTION  reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	OPEN_PARAMETER  reduce using rule 113 (autofillaccessorinvokation -> simpletype containeraccess .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	simpletype                     shift and go to state 61
	containeraccess                shift and go to state 95
	autofillaccessorinvokation     shift and go to state 97
	name                           shift and go to state 98
	sequence                       shift and go to state 99
	standardinvokation             shift and go to state 100
	autofillinvokation             shift and go to state 101
	number                         shift and go to state 60
	shorttype                      shift and go to state 40

state 71

	(114) autofillaccessorinvokation -> simpletype autofillinvokation .
	NAME            reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	NUMBER          reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	CLOSE_EXPRESSION reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	EOL             reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	OPEN_KIND       reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 114 (autofillaccessorinvokation -> simpletype autofillinvokation .)


state 72

	(34) parameter -> open_parameter . fullexpression close_parameter
	(35) parameter -> open_parameter . close_parameter
	(36) parameter -> open_parameter . fullexpressionset close_parameter
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(38) close_parameter -> . CLOSE_PARAMETER
	(15) fullexpressionset -> . fullexpressionset completefullexpression
	(16) fullexpressionset -> . completefullexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_PARAMETER shift and go to state 146
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	fullexpression                 shift and go to state 143
	close_parameter                shift and go to state 144
	fullexpressionset              shift and go to state 145
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	completefullexpression         shift and go to state 2
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	close_expression               shift and go to state 3
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 73

	(37) open_parameter -> OPEN_PARAMETER .
	CLOSE_PARAMETER reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	NAME            reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	OPEN_KIND       reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	CLOSE_EXPRESSION reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	EOL             reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	SEQUENCE        reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	UPPERSCOPEOPTION2 reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	UPPERSCOPEOPTION1 reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	NUMBER          reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	FORMATTEDSTRING reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)
	UNFORMATTEDSTRING reduce using rule 37 (open_parameter -> OPEN_PARAMETER .)


state 74

	(27) functortype -> structtype execution .
	CLOSE_EXPRESSION reduce using rule 27 (functortype -> structtype execution .)
	EOL             reduce using rule 27 (functortype -> structtype execution .)
	CLOSE_CONTAINER reduce using rule 27 (functortype -> structtype execution .)
	CLOSE_EXECUTION reduce using rule 27 (functortype -> structtype execution .)
	CLOSE_PARAMETER reduce using rule 27 (functortype -> structtype execution .)


state 75

	(63) limitedexpressionset -> limitedexpressionset completelimitedexpression .
	NAME            reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	SEQUENCE        reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	UPPERSCOPEOPTION2 reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	UPPERSCOPEOPTION1 reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	NUMBER          reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	FORMATTEDSTRING reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	UNFORMATTEDSTRING reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	CLOSE_EXPRESSION reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	EOL             reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	CLOSE_CONTAINER reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	CLOSE_EXECUTION reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)
	CLOSE_PARAMETER reduce using rule 63 (limitedexpressionset -> limitedexpressionset completelimitedexpression .)


state 76

	(55) completelimitedexpression -> limitedexpression . close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_expression               shift and go to state 78

state 77

	(12) containerinvokation -> name . container execution
	(2) containeraccess -> name . container
	(4) invokationwithexecution -> name . execution
	(81) protoexpression -> name .
	(62) explicitaccess -> name . EXPLICITACCESS name
	(83) sequence -> name . SEQUENCE name
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(123) shorttype -> name . SHORTTYPE
	(3) standardinvokation -> name . parameter
	(1) simpletype -> name . kind
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(42) open_container -> . OPEN_CONTAINER
	(32) open_execution -> . OPEN_EXECUTION
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(48) open_kind -> . OPEN_KIND
	CLOSE_EXPRESSION reduce using rule 81 (protoexpression -> name .)
	EOL             reduce using rule 81 (protoexpression -> name .)
	OPEN_KIND       reduce using rule 81 (protoexpression -> name .)
	OPEN_EXECUTION  reduce using rule 81 (protoexpression -> name .)
	OPEN_PARAMETER  reduce using rule 81 (protoexpression -> name .)
	CLOSE_CONTAINER reduce using rule 81 (protoexpression -> name .)
	CLOSE_EXECUTION reduce using rule 81 (protoexpression -> name .)
	CLOSE_PARAMETER reduce using rule 81 (protoexpression -> name .)
	EXPLICITACCESS  shift and go to state 84
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NUMBER          shift and go to state 43
	NAME            shift and go to state 25
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	name                           shift and go to state 79
	container                      shift and go to state 81
	execution                      shift and go to state 82
	number                         shift and go to state 86
	string                         shift and go to state 87
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	parameter                      shift and go to state 133
	kind                           shift and go to state 134
	open_container                 shift and go to state 58
	open_execution                 shift and go to state 59
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	open_kind                      shift and go to state 18

state 78

	(55) completelimitedexpression -> limitedexpression close_expression .
	(57) close_expression -> close_expression . EOL
	(58) close_expression -> close_expression . CLOSE_EXPRESSION
	NAME            reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	SEQUENCE        reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	UPPERSCOPEOPTION2 reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	UPPERSCOPEOPTION1 reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	NUMBER          reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	FORMATTEDSTRING reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	UNFORMATTEDSTRING reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	CLOSE_EXPRESSION reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	EOL             reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	CLOSE_CONTAINER reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	CLOSE_EXECUTION reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)
	CLOSE_PARAMETER reduce using rule 55 (completelimitedexpression -> limitedexpression close_expression .)


state 79

	(96) autofillaccessorinvokation -> name name .
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(83) sequence -> name . SEQUENCE name
	(123) shorttype -> name . SHORTTYPE
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	NAME            reduce using rule 96 (autofillaccessorinvokation -> name name .)
	CLOSE_EXPRESSION reduce using rule 96 (autofillaccessorinvokation -> name name .)
	EOL             reduce using rule 96 (autofillaccessorinvokation -> name name .)
	CLOSE_CONTAINER reduce using rule 96 (autofillaccessorinvokation -> name name .)
	CLOSE_EXECUTION reduce using rule 96 (autofillaccessorinvokation -> name name .)
	CLOSE_PARAMETER reduce using rule 96 (autofillaccessorinvokation -> name name .)
	OPEN_KIND       reduce using rule 96 (autofillaccessorinvokation -> name name .)
	OPEN_EXECUTION  reduce using rule 96 (autofillaccessorinvokation -> name name .)
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NUMBER          shift and go to state 43
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	parameter                      shift and go to state 133
	container                      shift and go to state 132
	number                         shift and go to state 86
	string                         shift and go to state 87
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 80

	(14) containerinvokationwithparameters -> name parameter . container execution
	(9) invokationwithparametersandexecution -> name parameter . execution
	(3) standardinvokation -> name parameter .
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(42) open_container -> . OPEN_CONTAINER
	(32) open_execution -> . OPEN_EXECUTION
	NAME            reduce using rule 3 (standardinvokation -> name parameter .)
	OPEN_CONTAINER  reduce using rule 3 (standardinvokation -> name parameter .)
	OPEN_EXECUTION  reduce using rule 3 (standardinvokation -> name parameter .)
	NUMBER          reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_EXPRESSION reduce using rule 3 (standardinvokation -> name parameter .)
	EOL             reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_CONTAINER reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_EXECUTION reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_PARAMETER reduce using rule 3 (standardinvokation -> name parameter .)

	container                      shift and go to state 147
	execution                      shift and go to state 148
	open_container                 shift and go to state 58
	open_execution                 shift and go to state 59

state 81

	(12) containerinvokation -> name container . execution
	(2) containeraccess -> name container .
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(32) open_execution -> . OPEN_EXECUTION
	NAME            reduce using rule 2 (containeraccess -> name container .)
	OPEN_EXECUTION  reduce using rule 2 (containeraccess -> name container .)
	NUMBER          reduce using rule 2 (containeraccess -> name container .)
	CLOSE_EXPRESSION reduce using rule 2 (containeraccess -> name container .)
	EOL             reduce using rule 2 (containeraccess -> name container .)
	OPEN_KIND       reduce using rule 2 (containeraccess -> name container .)
	OPEN_PARAMETER  reduce using rule 2 (containeraccess -> name container .)
	CLOSE_CONTAINER reduce using rule 2 (containeraccess -> name container .)
	CLOSE_EXECUTION reduce using rule 2 (containeraccess -> name container .)
	CLOSE_PARAMETER reduce using rule 2 (containeraccess -> name container .)

	execution                      shift and go to state 149
	open_execution                 shift and go to state 59

state 82

	(4) invokationwithexecution -> name execution .
	CLOSE_EXPRESSION reduce using rule 4 (invokationwithexecution -> name execution .)
	EOL             reduce using rule 4 (invokationwithexecution -> name execution .)
	OPEN_KIND       reduce using rule 4 (invokationwithexecution -> name execution .)
	OPEN_EXECUTION  reduce using rule 4 (invokationwithexecution -> name execution .)
	OPEN_PARAMETER  reduce using rule 4 (invokationwithexecution -> name execution .)
	NAME            reduce using rule 4 (invokationwithexecution -> name execution .)
	NUMBER          reduce using rule 4 (invokationwithexecution -> name execution .)
	CLOSE_CONTAINER reduce using rule 4 (invokationwithexecution -> name execution .)
	CLOSE_EXECUTION reduce using rule 4 (invokationwithexecution -> name execution .)
	CLOSE_PARAMETER reduce using rule 4 (invokationwithexecution -> name execution .)


state 83

	(1) simpletype -> name kind .
	(8) executivetype -> name kind . execution
	(5) structtype -> name kind . parameter
	(28) functortype -> name kind . parameter execution
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(32) open_execution -> . OPEN_EXECUTION
	(37) open_parameter -> . OPEN_PARAMETER
	NAME            reduce using rule 1 (simpletype -> name kind .)
	OPEN_EXECUTION  reduce using rule 1 (simpletype -> name kind .)
	OPEN_PARAMETER  reduce using rule 1 (simpletype -> name kind .)
	NUMBER          reduce using rule 1 (simpletype -> name kind .)
	CLOSE_EXPRESSION reduce using rule 1 (simpletype -> name kind .)
	EOL             reduce using rule 1 (simpletype -> name kind .)
	CLOSE_CONTAINER reduce using rule 1 (simpletype -> name kind .)
	CLOSE_EXECUTION reduce using rule 1 (simpletype -> name kind .)
	CLOSE_PARAMETER reduce using rule 1 (simpletype -> name kind .)

	execution                      shift and go to state 150
	parameter                      shift and go to state 151
	open_execution                 shift and go to state 59
	open_parameter                 shift and go to state 72

state 84

	(62) explicitaccess -> name EXPLICITACCESS . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 152

state 85

	(83) sequence -> name SEQUENCE . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 153

state 86

	(121) autofillinvokation -> name number .
	(128) number -> number . EXPLICITACCESS NUMBER
	CLOSE_EXPRESSION reduce using rule 121 (autofillinvokation -> name number .)
	EOL             reduce using rule 121 (autofillinvokation -> name number .)
	NAME            reduce using rule 121 (autofillinvokation -> name number .)
	NUMBER          reduce using rule 121 (autofillinvokation -> name number .)
	CLOSE_CONTAINER reduce using rule 121 (autofillinvokation -> name number .)
	CLOSE_EXECUTION reduce using rule 121 (autofillinvokation -> name number .)
	CLOSE_PARAMETER reduce using rule 121 (autofillinvokation -> name number .)
	OPEN_KIND       reduce using rule 121 (autofillinvokation -> name number .)
	OPEN_EXECUTION  reduce using rule 121 (autofillinvokation -> name number .)
	OPEN_PARAMETER  reduce using rule 121 (autofillinvokation -> name number .)
	EXPLICITACCESS  shift and go to state 119


state 87

	(122) autofillinvokation -> name string .
	CLOSE_EXPRESSION reduce using rule 122 (autofillinvokation -> name string .)
	EOL             reduce using rule 122 (autofillinvokation -> name string .)
	NAME            reduce using rule 122 (autofillinvokation -> name string .)
	NUMBER          reduce using rule 122 (autofillinvokation -> name string .)
	CLOSE_CONTAINER reduce using rule 122 (autofillinvokation -> name string .)
	CLOSE_EXECUTION reduce using rule 122 (autofillinvokation -> name string .)
	CLOSE_PARAMETER reduce using rule 122 (autofillinvokation -> name string .)
	OPEN_KIND       reduce using rule 122 (autofillinvokation -> name string .)
	OPEN_EXECUTION  reduce using rule 122 (autofillinvokation -> name string .)
	OPEN_PARAMETER  reduce using rule 122 (autofillinvokation -> name string .)


state 88

	(101) autofillaccessorinvokation -> name standardinvokation .
	NAME            reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	NUMBER          reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	CLOSE_EXPRESSION reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	EOL             reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	CLOSE_CONTAINER reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	CLOSE_EXECUTION reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	CLOSE_PARAMETER reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	OPEN_KIND       reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	OPEN_EXECUTION  reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)
	OPEN_PARAMETER  reduce using rule 101 (autofillaccessorinvokation -> name standardinvokation .)


state 89

	(102) autofillaccessorinvokation -> name containeraccess .
	NAME            reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	NUMBER          reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	CLOSE_EXPRESSION reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	EOL             reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	CLOSE_CONTAINER reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	CLOSE_EXECUTION reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	CLOSE_PARAMETER reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	OPEN_KIND       reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	OPEN_EXECUTION  reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)
	OPEN_PARAMETER  reduce using rule 102 (autofillaccessorinvokation -> name containeraccess .)


state 90

	(103) autofillaccessorinvokation -> name autofillinvokation .
	NAME            reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	NUMBER          reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	CLOSE_EXPRESSION reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	EOL             reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	OPEN_KIND       reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 103 (autofillaccessorinvokation -> name autofillinvokation .)


state 91

	(104) autofillaccessorinvokation -> name sequence .
	(82) sequence -> sequence . SEQUENCE name
	NAME            reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	NUMBER          reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	CLOSE_EXPRESSION reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	EOL             reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	CLOSE_CONTAINER reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	CLOSE_EXECUTION reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	CLOSE_PARAMETER reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	OPEN_KIND       reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	OPEN_EXECUTION  reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	OPEN_PARAMETER  reduce using rule 104 (autofillaccessorinvokation -> name sequence .)
	SEQUENCE        shift and go to state 108


state 92

	(123) shorttype -> name SHORTTYPE .
	NUMBER          reduce using rule 123 (shorttype -> name SHORTTYPE .)
	NAME            reduce using rule 123 (shorttype -> name SHORTTYPE .)
	OPEN_CONTAINER  reduce using rule 123 (shorttype -> name SHORTTYPE .)
	FORMATTEDSTRING reduce using rule 123 (shorttype -> name SHORTTYPE .)
	UNFORMATTEDSTRING reduce using rule 123 (shorttype -> name SHORTTYPE .)


state 93

	(44) kind -> open_kind open_kind .
	CLOSE_EXPRESSION reduce using rule 44 (kind -> open_kind open_kind .)
	EOL             reduce using rule 44 (kind -> open_kind open_kind .)
	OPEN_EXECUTION  reduce using rule 44 (kind -> open_kind open_kind .)
	OPEN_PARAMETER  reduce using rule 44 (kind -> open_kind open_kind .)
	NAME            reduce using rule 44 (kind -> open_kind open_kind .)
	NUMBER          reduce using rule 44 (kind -> open_kind open_kind .)
	CLOSE_CONTAINER reduce using rule 44 (kind -> open_kind open_kind .)
	CLOSE_EXECUTION reduce using rule 44 (kind -> open_kind open_kind .)
	CLOSE_PARAMETER reduce using rule 44 (kind -> open_kind open_kind .)


state 94

	(45) kind -> open_kind limitedexpression . open_kind
	(46) kind -> open_kind limitedexpression . close_expression
	(47) kind -> open_kind limitedexpression .
	(48) open_kind -> . OPEN_KIND
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION reduce using rule 47 (kind -> open_kind limitedexpression .)
	EOL             reduce using rule 47 (kind -> open_kind limitedexpression .)
	OPEN_EXECUTION  reduce using rule 47 (kind -> open_kind limitedexpression .)
	OPEN_PARAMETER  reduce using rule 47 (kind -> open_kind limitedexpression .)
	NAME            reduce using rule 47 (kind -> open_kind limitedexpression .)
	NUMBER          reduce using rule 47 (kind -> open_kind limitedexpression .)
	CLOSE_CONTAINER reduce using rule 47 (kind -> open_kind limitedexpression .)
	CLOSE_EXECUTION reduce using rule 47 (kind -> open_kind limitedexpression .)
	CLOSE_PARAMETER reduce using rule 47 (kind -> open_kind limitedexpression .)
	OPEN_KIND       shift and go to state 26

	open_kind                      shift and go to state 154
	close_expression               shift and go to state 155

state 95

	(88) autofillaccessorinvokation -> containeraccess . autofillaccessorinvokation
	(99) autofillaccessorinvokation -> containeraccess . name
	(108) autofillaccessorinvokation -> containeraccess . sequence
	(109) autofillaccessorinvokation -> containeraccess . standardinvokation
	(110) autofillaccessorinvokation -> containeraccess . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	containeraccess                shift and go to state 95
	autofillaccessorinvokation     shift and go to state 97
	name                           shift and go to state 98
	sequence                       shift and go to state 99
	standardinvokation             shift and go to state 100
	autofillinvokation             shift and go to state 101
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 96

	(11) containerinvokation -> containeraccess execution .
	CLOSE_EXPRESSION reduce using rule 11 (containerinvokation -> containeraccess execution .)
	EOL             reduce using rule 11 (containerinvokation -> containeraccess execution .)
	OPEN_KIND       reduce using rule 11 (containerinvokation -> containeraccess execution .)
	OPEN_EXECUTION  reduce using rule 11 (containerinvokation -> containeraccess execution .)
	OPEN_PARAMETER  reduce using rule 11 (containerinvokation -> containeraccess execution .)
	NAME            reduce using rule 11 (containerinvokation -> containeraccess execution .)
	NUMBER          reduce using rule 11 (containerinvokation -> containeraccess execution .)
	CLOSE_CONTAINER reduce using rule 11 (containerinvokation -> containeraccess execution .)
	CLOSE_EXECUTION reduce using rule 11 (containerinvokation -> containeraccess execution .)
	CLOSE_PARAMETER reduce using rule 11 (containerinvokation -> containeraccess execution .)


state 97

	(88) autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	EOL             reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 88 (autofillaccessorinvokation -> containeraccess autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	containeraccess                shift and go to state 113
	name                           shift and go to state 111
	standardinvokation             shift and go to state 112
	autofillinvokation             shift and go to state 114
	sequence                       shift and go to state 115
	number                         shift and go to state 116
	shorttype                      shift and go to state 40

state 98

	(99) autofillaccessorinvokation -> containeraccess name .
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(83) sequence -> name . SEQUENCE name
	(3) standardinvokation -> name . parameter
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(2) containeraccess -> name . container
	(1) simpletype -> name . kind
	(123) shorttype -> name . SHORTTYPE
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(42) open_container -> . OPEN_CONTAINER
	(48) open_kind -> . OPEN_KIND
	CLOSE_EXPRESSION reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	EOL             reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	CLOSE_CONTAINER reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	CLOSE_EXECUTION reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	CLOSE_PARAMETER reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	OPEN_EXECUTION  reduce using rule 99 (autofillaccessorinvokation -> containeraccess name .)
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43
	OPEN_PARAMETER  shift and go to state 73
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45
	OPEN_CONTAINER  shift and go to state 62
	OPEN_KIND       shift and go to state 26

	containeraccess                shift and go to state 89
	name                           shift and go to state 79
	standardinvokation             shift and go to state 88
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	parameter                      shift and go to state 133
	number                         shift and go to state 86
	string                         shift and go to state 87
	container                      shift and go to state 132
	kind                           shift and go to state 134
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	open_container                 shift and go to state 58
	open_kind                      shift and go to state 18

state 99

	(108) autofillaccessorinvokation -> containeraccess sequence .
	(86) autofillaccessorinvokation -> sequence . autofillaccessorinvokation
	(97) autofillaccessorinvokation -> sequence . name
	(82) sequence -> sequence . SEQUENCE name
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	CLOSE_EXPRESSION reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	EOL             reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	CLOSE_CONTAINER reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	CLOSE_EXECUTION reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	CLOSE_PARAMETER reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	OPEN_KIND       reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	OPEN_EXECUTION  reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	OPEN_PARAMETER  reduce using rule 108 (autofillaccessorinvokation -> containeraccess sequence .)
	SEQUENCE        shift and go to state 108
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	containeraccess                shift and go to state 95
	sequence                       shift and go to state 107
	autofillaccessorinvokation     shift and go to state 110
	name                           shift and go to state 109
	number                         shift and go to state 60
	standardinvokation             shift and go to state 50
	simpletype                     shift and go to state 61

state 100

	(109) autofillaccessorinvokation -> containeraccess standardinvokation .
	(87) autofillaccessorinvokation -> standardinvokation . autofillaccessorinvokation
	(98) autofillaccessorinvokation -> standardinvokation . name
	(105) autofillaccessorinvokation -> standardinvokation . containeraccess
	(106) autofillaccessorinvokation -> standardinvokation . sequence
	(107) autofillaccessorinvokation -> standardinvokation . autofillinvokation
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(2) containeraccess -> . name container
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	EOL             reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	CLOSE_CONTAINER reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	CLOSE_EXECUTION reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	CLOSE_PARAMETER reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	OPEN_KIND       reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	OPEN_EXECUTION  reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	OPEN_PARAMETER  reduce using rule 109 (autofillaccessorinvokation -> containeraccess standardinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	containeraccess                shift and go to state 55
	standardinvokation             shift and go to state 50
	autofillaccessorinvokation     shift and go to state 53
	name                           shift and go to state 54
	sequence                       shift and go to state 56
	autofillinvokation             shift and go to state 57
	number                         shift and go to state 60
	simpletype                     shift and go to state 61
	shorttype                      shift and go to state 40

state 101

	(110) autofillaccessorinvokation -> containeraccess autofillinvokation .
	NAME            reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	NUMBER          reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	CLOSE_EXPRESSION reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	EOL             reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	OPEN_KIND       reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 110 (autofillaccessorinvokation -> containeraccess autofillinvokation .)


state 102

	(70) protoexpressionset -> protoexpressionset completeprotoexpression .
	SEQUENCE        reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	UPPERSCOPEOPTION2 reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	UPPERSCOPEOPTION1 reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	NUMBER          reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	NAME            reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	FORMATTEDSTRING reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	UNFORMATTEDSTRING reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	CLOSE_EXPRESSION reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	EOL             reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	OPEN_KIND       reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	OPEN_EXECUTION  reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	OPEN_PARAMETER  reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	CLOSE_CONTAINER reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	CLOSE_EXECUTION reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)
	CLOSE_PARAMETER reduce using rule 70 (protoexpressionset -> protoexpressionset completeprotoexpression .)


state 103

	(56) completeprotoexpression -> protoexpression . close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_expression               shift and go to state 105

state 104

	(81) protoexpression -> name .
	(62) explicitaccess -> name . EXPLICITACCESS name
	(83) sequence -> name . SEQUENCE name
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(123) shorttype -> name . SHORTTYPE
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(1) simpletype -> name . kind
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(48) open_kind -> . OPEN_KIND
	CLOSE_EXPRESSION reduce using rule 81 (protoexpression -> name .)
	EOL             reduce using rule 81 (protoexpression -> name .)
	EXPLICITACCESS  shift and go to state 84
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NUMBER          shift and go to state 43
	NAME            shift and go to state 25
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	OPEN_KIND       shift and go to state 26

	name                           shift and go to state 79
	number                         shift and go to state 86
	string                         shift and go to state 87
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	parameter                      shift and go to state 133
	container                      shift and go to state 132
	kind                           shift and go to state 134
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	open_kind                      shift and go to state 18

state 105

	(56) completeprotoexpression -> protoexpression close_expression .
	(57) close_expression -> close_expression . EOL
	(58) close_expression -> close_expression . CLOSE_EXPRESSION
	SEQUENCE        reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	UPPERSCOPEOPTION2 reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	UPPERSCOPEOPTION1 reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	NUMBER          reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	NAME            reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	FORMATTEDSTRING reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	UNFORMATTEDSTRING reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	CLOSE_EXPRESSION reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	EOL             reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	OPEN_KIND       reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	OPEN_EXECUTION  reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	OPEN_PARAMETER  reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	CLOSE_CONTAINER reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	CLOSE_EXECUTION reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)
	CLOSE_PARAMETER reduce using rule 56 (completeprotoexpression -> protoexpression close_expression .)


state 106

	(61) explicitaccess -> explicitaccess EXPLICITACCESS . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 156

state 107

	(86) autofillaccessorinvokation -> sequence . autofillaccessorinvokation
	(97) autofillaccessorinvokation -> sequence . name
	(82) sequence -> sequence . SEQUENCE name
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(127) name -> . NAME
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(1) simpletype -> . name kind
	SEQUENCE        shift and go to state 108
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	sequence                       shift and go to state 107
	autofillaccessorinvokation     shift and go to state 110
	name                           shift and go to state 109
	number                         shift and go to state 60
	standardinvokation             shift and go to state 50
	containeraccess                shift and go to state 95
	simpletype                     shift and go to state 61

state 108

	(82) sequence -> sequence SEQUENCE . name
	(127) name -> . NAME
	NAME            shift and go to state 25

	name                           shift and go to state 157

state 109

	(97) autofillaccessorinvokation -> sequence name .
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(83) sequence -> name . SEQUENCE name
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(1) simpletype -> name . kind
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(48) open_kind -> . OPEN_KIND
	NUMBER          reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	CLOSE_EXPRESSION reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	EOL             reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	CLOSE_CONTAINER reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	CLOSE_EXECUTION reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	CLOSE_PARAMETER reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	OPEN_EXECUTION  reduce using rule 97 (autofillaccessorinvokation -> sequence name .)
	SEQUENCE        shift and go to state 85
	NAME            shift and go to state 25
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	OPEN_KIND       shift and go to state 26

	sequence                       shift and go to state 91
	name                           shift and go to state 79
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	parameter                      shift and go to state 133
	container                      shift and go to state 132
	kind                           shift and go to state 134
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	open_kind                      shift and go to state 18

state 110

	(86) autofillaccessorinvokation -> sequence autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	EOL             reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 86 (autofillaccessorinvokation -> sequence autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	sequence                       shift and go to state 115
	name                           shift and go to state 111
	standardinvokation             shift and go to state 112
	containeraccess                shift and go to state 113
	autofillinvokation             shift and go to state 114
	number                         shift and go to state 116
	shorttype                      shift and go to state 40

state 111

	(85) autofillaccessorinvokation -> autofillaccessorinvokation name .
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(121) autofillinvokation -> name . number
	(122) autofillinvokation -> name . string
	(83) sequence -> name . SEQUENCE name
	(123) shorttype -> name . SHORTTYPE
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	NAME            reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	CLOSE_EXPRESSION reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	EOL             reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	CLOSE_CONTAINER reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	CLOSE_EXECUTION reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	CLOSE_PARAMETER reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	OPEN_KIND       reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	OPEN_EXECUTION  reduce using rule 85 (autofillaccessorinvokation -> autofillaccessorinvokation name .)
	SEQUENCE        shift and go to state 85
	SHORTTYPE       shift and go to state 92
	NUMBER          shift and go to state 43
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	parameter                      shift and go to state 133
	container                      shift and go to state 132
	number                         shift and go to state 86
	string                         shift and go to state 87
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 112

	(90) autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .
	NAME            reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	NUMBER          reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	CLOSE_EXPRESSION reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	EOL             reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	CLOSE_CONTAINER reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	CLOSE_EXECUTION reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	CLOSE_PARAMETER reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	OPEN_KIND       reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	OPEN_EXECUTION  reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)
	OPEN_PARAMETER  reduce using rule 90 (autofillaccessorinvokation -> autofillaccessorinvokation standardinvokation .)


state 113

	(91) autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .
	NAME            reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	NUMBER          reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	CLOSE_EXPRESSION reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	EOL             reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	CLOSE_CONTAINER reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	CLOSE_EXECUTION reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	CLOSE_PARAMETER reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	OPEN_KIND       reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	OPEN_EXECUTION  reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)
	OPEN_PARAMETER  reduce using rule 91 (autofillaccessorinvokation -> autofillaccessorinvokation containeraccess .)


state 114

	(92) autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .
	NAME            reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	NUMBER          reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	CLOSE_EXPRESSION reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	EOL             reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	CLOSE_CONTAINER reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	CLOSE_EXECUTION reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	CLOSE_PARAMETER reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	OPEN_KIND       reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	OPEN_EXECUTION  reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)
	OPEN_PARAMETER  reduce using rule 92 (autofillaccessorinvokation -> autofillaccessorinvokation autofillinvokation .)


state 115

	(93) autofillaccessorinvokation -> autofillaccessorinvokation sequence .
	(82) sequence -> sequence . SEQUENCE name
	NAME            reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	NUMBER          reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	CLOSE_EXPRESSION reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	EOL             reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	CLOSE_CONTAINER reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	CLOSE_EXECUTION reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	CLOSE_PARAMETER reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	OPEN_KIND       reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	OPEN_EXECUTION  reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	OPEN_PARAMETER  reduce using rule 93 (autofillaccessorinvokation -> autofillaccessorinvokation sequence .)
	SEQUENCE        shift and go to state 108


state 116

	(94) autofillaccessorinvokation -> autofillaccessorinvokation number .
	(128) number -> number . EXPLICITACCESS NUMBER
	NAME            reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	NUMBER          reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	CLOSE_EXPRESSION reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	EOL             reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	CLOSE_CONTAINER reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	CLOSE_EXECUTION reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	CLOSE_PARAMETER reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	OPEN_KIND       reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	OPEN_EXECUTION  reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	OPEN_PARAMETER  reduce using rule 94 (autofillaccessorinvokation -> autofillaccessorinvokation number .)
	EXPLICITACCESS  shift and go to state 119


state 117

	(84) autofillaccessorinvokation -> number autofillaccessorinvokation .
	(85) autofillaccessorinvokation -> autofillaccessorinvokation . name
	(90) autofillaccessorinvokation -> autofillaccessorinvokation . standardinvokation
	(91) autofillaccessorinvokation -> autofillaccessorinvokation . containeraccess
	(92) autofillaccessorinvokation -> autofillaccessorinvokation . autofillinvokation
	(93) autofillaccessorinvokation -> autofillaccessorinvokation . sequence
	(94) autofillaccessorinvokation -> autofillaccessorinvokation . number
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	CLOSE_EXPRESSION reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	EOL             reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	CLOSE_CONTAINER reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	CLOSE_EXECUTION reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	CLOSE_PARAMETER reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	OPEN_KIND       reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	OPEN_EXECUTION  reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	OPEN_PARAMETER  reduce using rule 84 (autofillaccessorinvokation -> number autofillaccessorinvokation .)
	NAME            shift and go to state 25
	NUMBER          shift and go to state 43

	number                         shift and go to state 116
	name                           shift and go to state 111
	standardinvokation             shift and go to state 112
	containeraccess                shift and go to state 113
	autofillinvokation             shift and go to state 114
	sequence                       shift and go to state 115
	shorttype                      shift and go to state 40

state 118

	(95) autofillaccessorinvokation -> number name .
	(96) autofillaccessorinvokation -> name . name
	(101) autofillaccessorinvokation -> name . standardinvokation
	(102) autofillaccessorinvokation -> name . containeraccess
	(103) autofillaccessorinvokation -> name . autofillinvokation
	(104) autofillaccessorinvokation -> name . sequence
	(83) sequence -> name . SEQUENCE name
	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(1) simpletype -> name . kind
	(127) name -> . NAME
	(3) standardinvokation -> . name parameter
	(2) containeraccess -> . name container
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(123) shorttype -> . name SHORTTYPE
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	(48) open_kind -> . OPEN_KIND
	NUMBER          reduce using rule 95 (autofillaccessorinvokation -> number name .)
	CLOSE_EXPRESSION reduce using rule 95 (autofillaccessorinvokation -> number name .)
	EOL             reduce using rule 95 (autofillaccessorinvokation -> number name .)
	CLOSE_CONTAINER reduce using rule 95 (autofillaccessorinvokation -> number name .)
	CLOSE_EXECUTION reduce using rule 95 (autofillaccessorinvokation -> number name .)
	CLOSE_PARAMETER reduce using rule 95 (autofillaccessorinvokation -> number name .)
	OPEN_EXECUTION  reduce using rule 95 (autofillaccessorinvokation -> number name .)
	SEQUENCE        shift and go to state 85
	NAME            shift and go to state 25
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62
	OPEN_KIND       shift and go to state 26

	name                           shift and go to state 79
	standardinvokation             shift and go to state 88
	containeraccess                shift and go to state 89
	autofillinvokation             shift and go to state 90
	sequence                       shift and go to state 91
	parameter                      shift and go to state 133
	container                      shift and go to state 132
	kind                           shift and go to state 134
	shorttype                      shift and go to state 40
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58
	open_kind                      shift and go to state 18

state 119

	(128) number -> number EXPLICITACCESS . NUMBER
	NUMBER          shift and go to state 158


state 120

	(126) globalscope -> SEQUENCE NAME .
	CLOSE_EXPRESSION reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	EOL             reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	OPEN_KIND       reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	OPEN_EXECUTION  reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	OPEN_PARAMETER  reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	NAME            reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	NUMBER          reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	CLOSE_CONTAINER reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	CLOSE_EXECUTION reduce using rule 126 (globalscope -> SEQUENCE NAME .)
	CLOSE_PARAMETER reduce using rule 126 (globalscope -> SEQUENCE NAME .)


state 121

	(125) upperscopeoption2 -> UPPERSCOPEOPTION2 name .
	CLOSE_EXPRESSION reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	EOL             reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	OPEN_KIND       reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	OPEN_EXECUTION  reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	OPEN_PARAMETER  reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	NAME            reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	NUMBER          reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	CLOSE_CONTAINER reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	CLOSE_EXECUTION reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)
	CLOSE_PARAMETER reduce using rule 125 (upperscopeoption2 -> UPPERSCOPEOPTION2 name .)


state 122

	(124) upperscopeoption1 -> UPPERSCOPEOPTION1 name .
	CLOSE_EXPRESSION reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	EOL             reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	OPEN_KIND       reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	OPEN_EXECUTION  reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	OPEN_PARAMETER  reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	NAME            reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	NUMBER          reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	CLOSE_CONTAINER reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	CLOSE_EXECUTION reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)
	CLOSE_PARAMETER reduce using rule 124 (upperscopeoption1 -> UPPERSCOPEOPTION1 name .)


state 123

	(115) autofillinvokation -> shorttype standardinvokation .
	CLOSE_EXPRESSION reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	EOL             reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	NAME            reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	NUMBER          reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	CLOSE_CONTAINER reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	CLOSE_EXECUTION reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	CLOSE_PARAMETER reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	OPEN_KIND       reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	OPEN_EXECUTION  reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)
	OPEN_PARAMETER  reduce using rule 115 (autofillinvokation -> shorttype standardinvokation .)


state 124

	(116) autofillinvokation -> shorttype containeraccess .
	CLOSE_EXPRESSION reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	EOL             reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	NAME            reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	NUMBER          reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	CLOSE_CONTAINER reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	CLOSE_EXECUTION reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	CLOSE_PARAMETER reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	OPEN_KIND       reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	OPEN_EXECUTION  reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)
	OPEN_PARAMETER  reduce using rule 116 (autofillinvokation -> shorttype containeraccess .)


state 125

	(117) autofillinvokation -> shorttype container .
	CLOSE_EXPRESSION reduce using rule 117 (autofillinvokation -> shorttype container .)
	EOL             reduce using rule 117 (autofillinvokation -> shorttype container .)
	NAME            reduce using rule 117 (autofillinvokation -> shorttype container .)
	NUMBER          reduce using rule 117 (autofillinvokation -> shorttype container .)
	CLOSE_CONTAINER reduce using rule 117 (autofillinvokation -> shorttype container .)
	CLOSE_EXECUTION reduce using rule 117 (autofillinvokation -> shorttype container .)
	CLOSE_PARAMETER reduce using rule 117 (autofillinvokation -> shorttype container .)
	OPEN_KIND       reduce using rule 117 (autofillinvokation -> shorttype container .)
	OPEN_EXECUTION  reduce using rule 117 (autofillinvokation -> shorttype container .)
	OPEN_PARAMETER  reduce using rule 117 (autofillinvokation -> shorttype container .)


state 126

	(118) autofillinvokation -> shorttype sequence .
	(82) sequence -> sequence . SEQUENCE name
	CLOSE_EXPRESSION reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	EOL             reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	NAME            reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	NUMBER          reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	CLOSE_CONTAINER reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	CLOSE_EXECUTION reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	CLOSE_PARAMETER reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	OPEN_KIND       reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	OPEN_EXECUTION  reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	OPEN_PARAMETER  reduce using rule 118 (autofillinvokation -> shorttype sequence .)
	SEQUENCE        shift and go to state 108


state 127

	(119) autofillinvokation -> shorttype number .
	(128) number -> number . EXPLICITACCESS NUMBER
	CLOSE_EXPRESSION reduce using rule 119 (autofillinvokation -> shorttype number .)
	EOL             reduce using rule 119 (autofillinvokation -> shorttype number .)
	NAME            reduce using rule 119 (autofillinvokation -> shorttype number .)
	NUMBER          reduce using rule 119 (autofillinvokation -> shorttype number .)
	CLOSE_CONTAINER reduce using rule 119 (autofillinvokation -> shorttype number .)
	CLOSE_EXECUTION reduce using rule 119 (autofillinvokation -> shorttype number .)
	CLOSE_PARAMETER reduce using rule 119 (autofillinvokation -> shorttype number .)
	OPEN_KIND       reduce using rule 119 (autofillinvokation -> shorttype number .)
	OPEN_EXECUTION  reduce using rule 119 (autofillinvokation -> shorttype number .)
	OPEN_PARAMETER  reduce using rule 119 (autofillinvokation -> shorttype number .)
	EXPLICITACCESS  shift and go to state 119


state 128

	(120) autofillinvokation -> shorttype string .
	CLOSE_EXPRESSION reduce using rule 120 (autofillinvokation -> shorttype string .)
	EOL             reduce using rule 120 (autofillinvokation -> shorttype string .)
	NAME            reduce using rule 120 (autofillinvokation -> shorttype string .)
	NUMBER          reduce using rule 120 (autofillinvokation -> shorttype string .)
	CLOSE_CONTAINER reduce using rule 120 (autofillinvokation -> shorttype string .)
	CLOSE_EXECUTION reduce using rule 120 (autofillinvokation -> shorttype string .)
	CLOSE_PARAMETER reduce using rule 120 (autofillinvokation -> shorttype string .)
	OPEN_KIND       reduce using rule 120 (autofillinvokation -> shorttype string .)
	OPEN_EXECUTION  reduce using rule 120 (autofillinvokation -> shorttype string .)
	OPEN_PARAMETER  reduce using rule 120 (autofillinvokation -> shorttype string .)


state 129

	(3) standardinvokation -> name . parameter
	(2) containeraccess -> name . container
	(83) sequence -> name . SEQUENCE name
	(34) parameter -> . open_parameter fullexpression close_parameter
	(35) parameter -> . open_parameter close_parameter
	(36) parameter -> . open_parameter fullexpressionset close_parameter
	(39) container -> . open_container fullexpression close_container
	(40) container -> . open_container close_container
	(41) container -> . open_container fullexpressionset close_container
	(37) open_parameter -> . OPEN_PARAMETER
	(42) open_container -> . OPEN_CONTAINER
	SEQUENCE        shift and go to state 85
	OPEN_PARAMETER  shift and go to state 73
	OPEN_CONTAINER  shift and go to state 62

	parameter                      shift and go to state 133
	container                      shift and go to state 132
	open_parameter                 shift and go to state 72
	open_container                 shift and go to state 58

state 130

	(129) number -> NUMBER EXPLICITACCESS . NUMBER
	NUMBER          shift and go to state 159


state 131

	(13) containerinvokationwithparameters -> standardinvokation container execution .
	CLOSE_EXPRESSION reduce using rule 13 (containerinvokationwithparameters -> standardinvokation container execution .)
	EOL             reduce using rule 13 (containerinvokationwithparameters -> standardinvokation container execution .)
	CLOSE_CONTAINER reduce using rule 13 (containerinvokationwithparameters -> standardinvokation container execution .)
	CLOSE_EXECUTION reduce using rule 13 (containerinvokationwithparameters -> standardinvokation container execution .)
	CLOSE_PARAMETER reduce using rule 13 (containerinvokationwithparameters -> standardinvokation container execution .)


state 132

	(2) containeraccess -> name container .
	NAME            reduce using rule 2 (containeraccess -> name container .)
	NUMBER          reduce using rule 2 (containeraccess -> name container .)
	CLOSE_EXPRESSION reduce using rule 2 (containeraccess -> name container .)
	EOL             reduce using rule 2 (containeraccess -> name container .)
	CLOSE_CONTAINER reduce using rule 2 (containeraccess -> name container .)
	CLOSE_EXECUTION reduce using rule 2 (containeraccess -> name container .)
	CLOSE_PARAMETER reduce using rule 2 (containeraccess -> name container .)
	OPEN_KIND       reduce using rule 2 (containeraccess -> name container .)
	OPEN_EXECUTION  reduce using rule 2 (containeraccess -> name container .)
	OPEN_PARAMETER  reduce using rule 2 (containeraccess -> name container .)


state 133

	(3) standardinvokation -> name parameter .
	NAME            reduce using rule 3 (standardinvokation -> name parameter .)
	NUMBER          reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_EXPRESSION reduce using rule 3 (standardinvokation -> name parameter .)
	EOL             reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_CONTAINER reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_EXECUTION reduce using rule 3 (standardinvokation -> name parameter .)
	CLOSE_PARAMETER reduce using rule 3 (standardinvokation -> name parameter .)
	OPEN_KIND       reduce using rule 3 (standardinvokation -> name parameter .)
	OPEN_EXECUTION  reduce using rule 3 (standardinvokation -> name parameter .)
	OPEN_PARAMETER  reduce using rule 3 (standardinvokation -> name parameter .)


state 134

	(1) simpletype -> name kind .
	NAME            reduce using rule 1 (simpletype -> name kind .)
	NUMBER          reduce using rule 1 (simpletype -> name kind .)


state 135

	(39) container -> open_container fullexpression . close_container
	(54) completefullexpression -> fullexpression . close_expression
	(43) close_container -> . CLOSE_CONTAINER
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_CONTAINER shift and go to state 138
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_container                shift and go to state 160
	close_expression               shift and go to state 49

state 136

	(40) container -> open_container close_container .
	OPEN_EXECUTION  reduce using rule 40 (container -> open_container close_container .)
	NAME            reduce using rule 40 (container -> open_container close_container .)
	NUMBER          reduce using rule 40 (container -> open_container close_container .)
	CLOSE_EXPRESSION reduce using rule 40 (container -> open_container close_container .)
	EOL             reduce using rule 40 (container -> open_container close_container .)
	CLOSE_CONTAINER reduce using rule 40 (container -> open_container close_container .)
	CLOSE_EXECUTION reduce using rule 40 (container -> open_container close_container .)
	CLOSE_PARAMETER reduce using rule 40 (container -> open_container close_container .)
	OPEN_KIND       reduce using rule 40 (container -> open_container close_container .)
	OPEN_PARAMETER  reduce using rule 40 (container -> open_container close_container .)


state 137

	(41) container -> open_container fullexpressionset . close_container
	(15) fullexpressionset -> fullexpressionset . completefullexpression
	(43) close_container -> . CLOSE_CONTAINER
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_CONTAINER shift and go to state 138
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	close_container                shift and go to state 161
	completefullexpression         shift and go to state 46
	close_expression               shift and go to state 3
	fullexpression                 shift and go to state 4
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 138

	(43) close_container -> CLOSE_CONTAINER .
	OPEN_EXECUTION  reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	NAME            reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	NUMBER          reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	CLOSE_EXPRESSION reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	EOL             reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	CLOSE_CONTAINER reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	CLOSE_EXECUTION reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	CLOSE_PARAMETER reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	OPEN_KIND       reduce using rule 43 (close_container -> CLOSE_CONTAINER .)
	OPEN_PARAMETER  reduce using rule 43 (close_container -> CLOSE_CONTAINER .)


state 139

	(29) execution -> open_execution fullexpression . close_execution
	(54) completefullexpression -> fullexpression . close_expression
	(33) close_execution -> . CLOSE_EXECUTION
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_EXECUTION shift and go to state 142
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_execution                shift and go to state 162
	close_expression               shift and go to state 49

state 140

	(30) execution -> open_execution close_execution .
	CLOSE_EXPRESSION reduce using rule 30 (execution -> open_execution close_execution .)
	EOL             reduce using rule 30 (execution -> open_execution close_execution .)
	CLOSE_CONTAINER reduce using rule 30 (execution -> open_execution close_execution .)
	CLOSE_EXECUTION reduce using rule 30 (execution -> open_execution close_execution .)
	CLOSE_PARAMETER reduce using rule 30 (execution -> open_execution close_execution .)
	OPEN_KIND       reduce using rule 30 (execution -> open_execution close_execution .)
	OPEN_EXECUTION  reduce using rule 30 (execution -> open_execution close_execution .)
	OPEN_PARAMETER  reduce using rule 30 (execution -> open_execution close_execution .)
	NAME            reduce using rule 30 (execution -> open_execution close_execution .)
	NUMBER          reduce using rule 30 (execution -> open_execution close_execution .)


state 141

	(31) execution -> open_execution fullexpressionset . close_execution
	(15) fullexpressionset -> fullexpressionset . completefullexpression
	(33) close_execution -> . CLOSE_EXECUTION
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_EXECUTION shift and go to state 142
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	close_execution                shift and go to state 163
	completefullexpression         shift and go to state 46
	close_expression               shift and go to state 3
	fullexpression                 shift and go to state 4
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 142

	(33) close_execution -> CLOSE_EXECUTION .
	CLOSE_EXPRESSION reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	EOL             reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	CLOSE_CONTAINER reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	CLOSE_EXECUTION reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	CLOSE_PARAMETER reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	OPEN_KIND       reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	OPEN_EXECUTION  reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	OPEN_PARAMETER  reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	NAME            reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)
	NUMBER          reduce using rule 33 (close_execution -> CLOSE_EXECUTION .)


state 143

	(34) parameter -> open_parameter fullexpression . close_parameter
	(54) completefullexpression -> fullexpression . close_expression
	(38) close_parameter -> . CLOSE_PARAMETER
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	CLOSE_PARAMETER shift and go to state 146
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5

	close_parameter                shift and go to state 164
	close_expression               shift and go to state 49

state 144

	(35) parameter -> open_parameter close_parameter .
	OPEN_EXECUTION  reduce using rule 35 (parameter -> open_parameter close_parameter .)
	CLOSE_EXPRESSION reduce using rule 35 (parameter -> open_parameter close_parameter .)
	EOL             reduce using rule 35 (parameter -> open_parameter close_parameter .)
	CLOSE_CONTAINER reduce using rule 35 (parameter -> open_parameter close_parameter .)
	CLOSE_EXECUTION reduce using rule 35 (parameter -> open_parameter close_parameter .)
	CLOSE_PARAMETER reduce using rule 35 (parameter -> open_parameter close_parameter .)
	OPEN_CONTAINER  reduce using rule 35 (parameter -> open_parameter close_parameter .)
	NAME            reduce using rule 35 (parameter -> open_parameter close_parameter .)
	NUMBER          reduce using rule 35 (parameter -> open_parameter close_parameter .)
	OPEN_KIND       reduce using rule 35 (parameter -> open_parameter close_parameter .)
	OPEN_PARAMETER  reduce using rule 35 (parameter -> open_parameter close_parameter .)


state 145

	(36) parameter -> open_parameter fullexpressionset . close_parameter
	(15) fullexpressionset -> fullexpressionset . completefullexpression
	(38) close_parameter -> . CLOSE_PARAMETER
	(53) completefullexpression -> . close_expression
	(54) completefullexpression -> . fullexpression close_expression
	(57) close_expression -> . close_expression EOL
	(58) close_expression -> . close_expression CLOSE_EXPRESSION
	(59) close_expression -> . CLOSE_EXPRESSION
	(60) close_expression -> . EOL
	(17) fullexpression -> . containerinvokationwithparameters
	(18) fullexpression -> . invokationwithparametersandexecution
	(19) fullexpression -> . standardinvokation
	(20) fullexpression -> . simpletype
	(21) fullexpression -> . executivetype
	(22) fullexpression -> . structtype
	(23) fullexpression -> . functortype
	(24) fullexpression -> . kind
	(25) fullexpression -> . limitedexpressionset
	(26) fullexpression -> . limitedexpression
	(13) containerinvokationwithparameters -> . standardinvokation container execution
	(14) containerinvokationwithparameters -> . name parameter container execution
	(9) invokationwithparametersandexecution -> . name parameter execution
	(10) invokationwithparametersandexecution -> . standardinvokation execution
	(3) standardinvokation -> . name parameter
	(1) simpletype -> . name kind
	(7) executivetype -> . simpletype execution
	(8) executivetype -> . name kind execution
	(5) structtype -> . name kind parameter
	(6) structtype -> . simpletype parameter
	(27) functortype -> . structtype execution
	(28) functortype -> . name kind parameter execution
	(44) kind -> . open_kind open_kind
	(45) kind -> . open_kind limitedexpression open_kind
	(46) kind -> . open_kind limitedexpression close_expression
	(47) kind -> . open_kind limitedexpression
	(63) limitedexpressionset -> . limitedexpressionset completelimitedexpression
	(64) limitedexpressionset -> . completelimitedexpression
	(65) limitedexpression -> . containerinvokation
	(66) limitedexpression -> . containeraccess
	(67) limitedexpression -> . invokationwithexecution
	(68) limitedexpression -> . protoexpressionset
	(69) limitedexpression -> . protoexpression
	(127) name -> . NAME
	(48) open_kind -> . OPEN_KIND
	(55) completelimitedexpression -> . limitedexpression close_expression
	(11) containerinvokation -> . containeraccess execution
	(12) containerinvokation -> . name container execution
	(2) containeraccess -> . name container
	(4) invokationwithexecution -> . name execution
	(70) protoexpressionset -> . protoexpressionset completeprotoexpression
	(71) protoexpressionset -> . completeprotoexpression
	(72) protoexpression -> . globalscope
	(73) protoexpression -> . upperscopeoption2
	(74) protoexpression -> . upperscopeoption1
	(75) protoexpression -> . explicitaccess
	(76) protoexpression -> . sequence
	(77) protoexpression -> . autofillinvokation
	(78) protoexpression -> . autofillaccessorinvokation
	(79) protoexpression -> . string
	(80) protoexpression -> . number
	(81) protoexpression -> . name
	(56) completeprotoexpression -> . protoexpression close_expression
	(126) globalscope -> . SEQUENCE NAME
	(125) upperscopeoption2 -> . UPPERSCOPEOPTION2 name
	(124) upperscopeoption1 -> . UPPERSCOPEOPTION1 name
	(61) explicitaccess -> . explicitaccess EXPLICITACCESS name
	(62) explicitaccess -> . name EXPLICITACCESS name
	(82) sequence -> . sequence SEQUENCE name
	(83) sequence -> . name SEQUENCE name
	(115) autofillinvokation -> . shorttype standardinvokation
	(116) autofillinvokation -> . shorttype containeraccess
	(117) autofillinvokation -> . shorttype container
	(118) autofillinvokation -> . shorttype sequence
	(119) autofillinvokation -> . shorttype number
	(120) autofillinvokation -> . shorttype string
	(121) autofillinvokation -> . name number
	(122) autofillinvokation -> . name string
	(84) autofillaccessorinvokation -> . number autofillaccessorinvokation
	(85) autofillaccessorinvokation -> . autofillaccessorinvokation name
	(86) autofillaccessorinvokation -> . sequence autofillaccessorinvokation
	(87) autofillaccessorinvokation -> . standardinvokation autofillaccessorinvokation
	(88) autofillaccessorinvokation -> . containeraccess autofillaccessorinvokation
	(89) autofillaccessorinvokation -> . simpletype autofillaccessorinvokation
	(90) autofillaccessorinvokation -> . autofillaccessorinvokation standardinvokation
	(91) autofillaccessorinvokation -> . autofillaccessorinvokation containeraccess
	(92) autofillaccessorinvokation -> . autofillaccessorinvokation autofillinvokation
	(93) autofillaccessorinvokation -> . autofillaccessorinvokation sequence
	(94) autofillaccessorinvokation -> . autofillaccessorinvokation number
	(95) autofillaccessorinvokation -> . number name
	(96) autofillaccessorinvokation -> . name name
	(97) autofillaccessorinvokation -> . sequence name
	(98) autofillaccessorinvokation -> . standardinvokation name
	(99) autofillaccessorinvokation -> . containeraccess name
	(100) autofillaccessorinvokation -> . simpletype name
	(101) autofillaccessorinvokation -> . name standardinvokation
	(102) autofillaccessorinvokation -> . name containeraccess
	(103) autofillaccessorinvokation -> . name autofillinvokation
	(104) autofillaccessorinvokation -> . name sequence
	(105) autofillaccessorinvokation -> . standardinvokation containeraccess
	(106) autofillaccessorinvokation -> . standardinvokation sequence
	(107) autofillaccessorinvokation -> . standardinvokation autofillinvokation
	(108) autofillaccessorinvokation -> . containeraccess sequence
	(109) autofillaccessorinvokation -> . containeraccess standardinvokation
	(110) autofillaccessorinvokation -> . containeraccess autofillinvokation
	(111) autofillaccessorinvokation -> . simpletype sequence
	(112) autofillaccessorinvokation -> . simpletype standardinvokation
	(113) autofillaccessorinvokation -> . simpletype containeraccess
	(114) autofillaccessorinvokation -> . simpletype autofillinvokation
	(51) string -> . formattedstring
	(52) string -> . unformattedstring
	(128) number -> . number EXPLICITACCESS NUMBER
	(129) number -> . NUMBER EXPLICITACCESS NUMBER
	(130) number -> . NUMBER
	(123) shorttype -> . name SHORTTYPE
	(50) formattedstring -> . FORMATTEDSTRING
	(49) unformattedstring -> . UNFORMATTEDSTRING
	CLOSE_PARAMETER shift and go to state 146
	CLOSE_EXPRESSION shift and go to state 6
	EOL             shift and go to state 5
	NAME            shift and go to state 25
	OPEN_KIND       shift and go to state 26
	SEQUENCE        shift and go to state 37
	UPPERSCOPEOPTION2 shift and go to state 38
	UPPERSCOPEOPTION1 shift and go to state 39
	NUMBER          shift and go to state 43
	FORMATTEDSTRING shift and go to state 44
	UNFORMATTEDSTRING shift and go to state 45

	close_parameter                shift and go to state 165
	completefullexpression         shift and go to state 46
	close_expression               shift and go to state 3
	fullexpression                 shift and go to state 4
	containerinvokationwithparameters shift and go to state 7
	invokationwithparametersandexecution shift and go to state 8
	standardinvokation             shift and go to state 9
	simpletype                     shift and go to state 10
	executivetype                  shift and go to state 11
	structtype                     shift and go to state 12
	functortype                    shift and go to state 13
	kind                           shift and go to state 14
	limitedexpressionset           shift and go to state 15
	limitedexpression              shift and go to state 16
	name                           shift and go to state 17
	open_kind                      shift and go to state 18
	completelimitedexpression      shift and go to state 19
	containerinvokation            shift and go to state 20
	containeraccess                shift and go to state 21
	invokationwithexecution        shift and go to state 22
	protoexpressionset             shift and go to state 23
	protoexpression                shift and go to state 24
	completeprotoexpression        shift and go to state 27
	globalscope                    shift and go to state 28
	upperscopeoption2              shift and go to state 29
	upperscopeoption1              shift and go to state 30
	explicitaccess                 shift and go to state 31
	sequence                       shift and go to state 32
	autofillinvokation             shift and go to state 33
	autofillaccessorinvokation     shift and go to state 34
	string                         shift and go to state 35
	number                         shift and go to state 36
	shorttype                      shift and go to state 40
	formattedstring                shift and go to state 41
	unformattedstring              shift and go to state 42

state 146

	(38) close_parameter -> CLOSE_PARAMETER .
	OPEN_EXECUTION  reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	CLOSE_EXPRESSION reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	EOL             reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	CLOSE_CONTAINER reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	CLOSE_EXECUTION reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	CLOSE_PARAMETER reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	OPEN_CONTAINER  reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	NAME            reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	NUMBER          reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	OPEN_KIND       reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)
	OPEN_PARAMETER  reduce using rule 38 (close_parameter -> CLOSE_PARAMETER .)


state 147

	(14) containerinvokationwithparameters -> name parameter container . execution
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(32) open_execution -> . OPEN_EXECUTION
	OPEN_EXECUTION  shift and go to state 63

	execution                      shift and go to state 166
	open_execution                 shift and go to state 59

state 148

	(9) invokationwithparametersandexecution -> name parameter execution .
	CLOSE_EXPRESSION reduce using rule 9 (invokationwithparametersandexecution -> name parameter execution .)
	EOL             reduce using rule 9 (invokationwithparametersandexecution -> name parameter execution .)
	CLOSE_CONTAINER reduce using rule 9 (invokationwithparametersandexecution -> name parameter execution .)
	CLOSE_EXECUTION reduce using rule 9 (invokationwithparametersandexecution -> name parameter execution .)
	CLOSE_PARAMETER reduce using rule 9 (invokationwithparametersandexecution -> name parameter execution .)


state 149

	(12) containerinvokation -> name container execution .
	CLOSE_EXPRESSION reduce using rule 12 (containerinvokation -> name container execution .)
	EOL             reduce using rule 12 (containerinvokation -> name container execution .)
	OPEN_KIND       reduce using rule 12 (containerinvokation -> name container execution .)
	OPEN_EXECUTION  reduce using rule 12 (containerinvokation -> name container execution .)
	OPEN_PARAMETER  reduce using rule 12 (containerinvokation -> name container execution .)
	NAME            reduce using rule 12 (containerinvokation -> name container execution .)
	NUMBER          reduce using rule 12 (containerinvokation -> name container execution .)
	CLOSE_CONTAINER reduce using rule 12 (containerinvokation -> name container execution .)
	CLOSE_EXECUTION reduce using rule 12 (containerinvokation -> name container execution .)
	CLOSE_PARAMETER reduce using rule 12 (containerinvokation -> name container execution .)


state 150

	(8) executivetype -> name kind execution .
	CLOSE_EXPRESSION reduce using rule 8 (executivetype -> name kind execution .)
	EOL             reduce using rule 8 (executivetype -> name kind execution .)
	CLOSE_CONTAINER reduce using rule 8 (executivetype -> name kind execution .)
	CLOSE_EXECUTION reduce using rule 8 (executivetype -> name kind execution .)
	CLOSE_PARAMETER reduce using rule 8 (executivetype -> name kind execution .)


state 151

	(5) structtype -> name kind parameter .
	(28) functortype -> name kind parameter . execution
	(29) execution -> . open_execution fullexpression close_execution
	(30) execution -> . open_execution close_execution
	(31) execution -> . open_execution fullexpressionset close_execution
	(32) open_execution -> . OPEN_EXECUTION
	OPEN_EXECUTION  reduce using rule 5 (structtype -> name kind parameter .)
	CLOSE_EXPRESSION reduce using rule 5 (structtype -> name kind parameter .)
	EOL             reduce using rule 5 (structtype -> name kind parameter .)
	CLOSE_CONTAINER reduce using rule 5 (structtype -> name kind parameter .)
	CLOSE_EXECUTION reduce using rule 5 (structtype -> name kind parameter .)
	CLOSE_PARAMETER reduce using rule 5 (structtype -> name kind parameter .)

	execution                      shift and go to state 167
	open_execution                 shift and go to state 59

state 152

	(62) explicitaccess -> name EXPLICITACCESS name .
	EXPLICITACCESS  reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	CLOSE_EXPRESSION reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	EOL             reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	OPEN_KIND       reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	OPEN_EXECUTION  reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	OPEN_PARAMETER  reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	NAME            reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	NUMBER          reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	CLOSE_CONTAINER reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	CLOSE_EXECUTION reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)
	CLOSE_PARAMETER reduce using rule 62 (explicitaccess -> name EXPLICITACCESS name .)


state 153

	(83) sequence -> name SEQUENCE name .
	SEQUENCE        reduce using rule 83 (sequence -> name SEQUENCE name .)
	NAME            reduce using rule 83 (sequence -> name SEQUENCE name .)
	NUMBER          reduce using rule 83 (sequence -> name SEQUENCE name .)
	CLOSE_EXPRESSION reduce using rule 83 (sequence -> name SEQUENCE name .)
	EOL             reduce using rule 83 (sequence -> name SEQUENCE name .)
	CLOSE_CONTAINER reduce using rule 83 (sequence -> name SEQUENCE name .)
	CLOSE_EXECUTION reduce using rule 83 (sequence -> name SEQUENCE name .)
	CLOSE_PARAMETER reduce using rule 83 (sequence -> name SEQUENCE name .)
	OPEN_KIND       reduce using rule 83 (sequence -> name SEQUENCE name .)
	OPEN_EXECUTION  reduce using rule 83 (sequence -> name SEQUENCE name .)
	OPEN_PARAMETER  reduce using rule 83 (sequence -> name SEQUENCE name .)


state 154

	(45) kind -> open_kind limitedexpression open_kind .
	CLOSE_EXPRESSION reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	EOL             reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	OPEN_EXECUTION  reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	OPEN_PARAMETER  reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	NAME            reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	NUMBER          reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	CLOSE_CONTAINER reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	CLOSE_EXECUTION reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)
	CLOSE_PARAMETER reduce using rule 45 (kind -> open_kind limitedexpression open_kind .)


state 155

	(46) kind -> open_kind limitedexpression close_expression .
	(57) close_expression -> close_expression . EOL
	(58) close_expression -> close_expression . CLOSE_EXPRESSION
	CLOSE_EXPRESSION reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	EOL             reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	OPEN_EXECUTION  reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	OPEN_PARAMETER  reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	NAME            reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	NUMBER          reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	CLOSE_CONTAINER reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	CLOSE_EXECUTION reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)
	CLOSE_PARAMETER reduce using rule 46 (kind -> open_kind limitedexpression close_expression .)


state 156

	(61) explicitaccess -> explicitaccess EXPLICITACCESS name .
	EXPLICITACCESS  reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	CLOSE_EXPRESSION reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	EOL             reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	OPEN_KIND       reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	OPEN_EXECUTION  reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	OPEN_PARAMETER  reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	NAME            reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	NUMBER          reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	CLOSE_CONTAINER reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	CLOSE_EXECUTION reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)
	CLOSE_PARAMETER reduce using rule 61 (explicitaccess -> explicitaccess EXPLICITACCESS name .)


state 157

	(82) sequence -> sequence SEQUENCE name .
	SEQUENCE        reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	NAME            reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	NUMBER          reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	CLOSE_EXPRESSION reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	EOL             reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	CLOSE_CONTAINER reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	CLOSE_EXECUTION reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	CLOSE_PARAMETER reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	OPEN_KIND       reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	OPEN_EXECUTION  reduce using rule 82 (sequence -> sequence SEQUENCE name .)
	OPEN_PARAMETER  reduce using rule 82 (sequence -> sequence SEQUENCE name .)


state 158

	(128) number -> number EXPLICITACCESS NUMBER .
	EXPLICITACCESS  reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	NAME            reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	NUMBER          reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	CLOSE_EXPRESSION reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	EOL             reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	CLOSE_CONTAINER reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	CLOSE_EXECUTION reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	CLOSE_PARAMETER reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	OPEN_KIND       reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	OPEN_EXECUTION  reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)
	OPEN_PARAMETER  reduce using rule 128 (number -> number EXPLICITACCESS NUMBER .)


state 159

	(129) number -> NUMBER EXPLICITACCESS NUMBER .
	EXPLICITACCESS  reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	NAME            reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	NUMBER          reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	CLOSE_EXPRESSION reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	EOL             reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	CLOSE_CONTAINER reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	CLOSE_EXECUTION reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	CLOSE_PARAMETER reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	OPEN_KIND       reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	OPEN_EXECUTION  reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)
	OPEN_PARAMETER  reduce using rule 129 (number -> NUMBER EXPLICITACCESS NUMBER .)


state 160

	(39) container -> open_container fullexpression close_container .
	OPEN_EXECUTION  reduce using rule 39 (container -> open_container fullexpression close_container .)
	NAME            reduce using rule 39 (container -> open_container fullexpression close_container .)
	NUMBER          reduce using rule 39 (container -> open_container fullexpression close_container .)
	CLOSE_EXPRESSION reduce using rule 39 (container -> open_container fullexpression close_container .)
	EOL             reduce using rule 39 (container -> open_container fullexpression close_container .)
	CLOSE_CONTAINER reduce using rule 39 (container -> open_container fullexpression close_container .)
	CLOSE_EXECUTION reduce using rule 39 (container -> open_container fullexpression close_container .)
	CLOSE_PARAMETER reduce using rule 39 (container -> open_container fullexpression close_container .)
	OPEN_KIND       reduce using rule 39 (container -> open_container fullexpression close_container .)
	OPEN_PARAMETER  reduce using rule 39 (container -> open_container fullexpression close_container .)


state 161

	(41) container -> open_container fullexpressionset close_container .
	OPEN_EXECUTION  reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	NAME            reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	NUMBER          reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	CLOSE_EXPRESSION reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	EOL             reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	CLOSE_CONTAINER reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	CLOSE_EXECUTION reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	CLOSE_PARAMETER reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	OPEN_KIND       reduce using rule 41 (container -> open_container fullexpressionset close_container .)
	OPEN_PARAMETER  reduce using rule 41 (container -> open_container fullexpressionset close_container .)


state 162

	(29) execution -> open_execution fullexpression close_execution .
	CLOSE_EXPRESSION reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	EOL             reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	CLOSE_CONTAINER reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	CLOSE_EXECUTION reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	CLOSE_PARAMETER reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	OPEN_KIND       reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	OPEN_EXECUTION  reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	OPEN_PARAMETER  reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	NAME            reduce using rule 29 (execution -> open_execution fullexpression close_execution .)
	NUMBER          reduce using rule 29 (execution -> open_execution fullexpression close_execution .)


state 163

	(31) execution -> open_execution fullexpressionset close_execution .
	CLOSE_EXPRESSION reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	EOL             reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	CLOSE_CONTAINER reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	CLOSE_EXECUTION reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	CLOSE_PARAMETER reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	OPEN_KIND       reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	OPEN_EXECUTION  reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	OPEN_PARAMETER  reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	NAME            reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)
	NUMBER          reduce using rule 31 (execution -> open_execution fullexpressionset close_execution .)


state 164

	(34) parameter -> open_parameter fullexpression close_parameter .
	OPEN_EXECUTION  reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	CLOSE_EXPRESSION reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	EOL             reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	CLOSE_CONTAINER reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	CLOSE_EXECUTION reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	CLOSE_PARAMETER reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	OPEN_CONTAINER  reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	NAME            reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	NUMBER          reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	OPEN_KIND       reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)
	OPEN_PARAMETER  reduce using rule 34 (parameter -> open_parameter fullexpression close_parameter .)


state 165

	(36) parameter -> open_parameter fullexpressionset close_parameter .
	OPEN_EXECUTION  reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	CLOSE_EXPRESSION reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	EOL             reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	CLOSE_CONTAINER reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	CLOSE_EXECUTION reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	CLOSE_PARAMETER reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	OPEN_CONTAINER  reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	NAME            reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	NUMBER          reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	OPEN_KIND       reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)
	OPEN_PARAMETER  reduce using rule 36 (parameter -> open_parameter fullexpressionset close_parameter .)


state 166

	(14) containerinvokationwithparameters -> name parameter container execution .
	CLOSE_EXPRESSION reduce using rule 14 (containerinvokationwithparameters -> name parameter container execution .)
	EOL             reduce using rule 14 (containerinvokationwithparameters -> name parameter container execution .)
	CLOSE_CONTAINER reduce using rule 14 (containerinvokationwithparameters -> name parameter container execution .)
	CLOSE_EXECUTION reduce using rule 14 (containerinvokationwithparameters -> name parameter container execution .)
	CLOSE_PARAMETER reduce using rule 14 (containerinvokationwithparameters -> name parameter container execution .)


state 167

	(28) functortype -> name kind parameter execution .
	CLOSE_EXPRESSION reduce using rule 28 (functortype -> name kind parameter execution .)
	EOL             reduce using rule 28 (functortype -> name kind parameter execution .)
	CLOSE_CONTAINER reduce using rule 28 (functortype -> name kind parameter execution .)
	CLOSE_EXECUTION reduce using rule 28 (functortype -> name kind parameter execution .)
	CLOSE_PARAMETER reduce using rule 28 (functortype -> name kind parameter execution .)
